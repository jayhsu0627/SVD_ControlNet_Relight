INFO:__main__:***** Running training *****
INFO:__main__:  Num examples = 4728
INFO:__main__:  Num Epochs = 120
INFO:__main__:  Instantaneous batch size per device = 2
INFO:__main__:  Total train batch size (w. parallel, distributed & accumulation) = 16
INFO:__main__:  Gradient Accumulation steps = 8
INFO:__main__:  Total optimization steps = 35520
Steps:   0%|                                                                                                                                                | 0/35520 [00:00<?, ?it/s]/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/utils/data/dataloader.py:557: UserWarning: This DataLoader will create 4 worker processes in total. Our suggested max number of worker in current system is 1, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.
  warnings.warn(_create_warning_msg(
Traceback (most recent call last):
  File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/train_svd_controlnet.py", line 1940, in <module>
    main()
  File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/train_svd_controlnet.py", line 1516, in main
    for step, batch in enumerate(train_dataloader):
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/data_loader.py", line 451, in __iter__
    dataloader_iter = super().__iter__()
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 440, in __iter__
    return self._get_iterator()
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 388, in _get_iterator
    return _MultiProcessingDataLoaderIter(self)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 1083, in __init__
    self._reset(loader, first_iter=True)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 1116, in _reset
    self._try_put_index()
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/utils/data/dataloader.py", line 1361, in _try_put_index
    self._index_queues[worker_queue_idx].put((self._send_idx, index))  # type: ignore[possibly-undefined]
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/multiprocessing/queues.py", line 94, in put
    self._start_thread()
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/multiprocessing/queues.py", line 179, in _start_thread
    self._thread.start()
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/threading.py", line 897, in start
    self._started.wait()
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/threading.py", line 574, in wait
    signaled = self._cond.wait(timeout)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/threading.py", line 312, in wait
    waiter.acquire()
KeyboardInterrupt