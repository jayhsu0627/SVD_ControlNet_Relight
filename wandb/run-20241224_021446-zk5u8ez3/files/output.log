INFO:__main__:***** Running training *****
INFO:__main__:  Num examples = 4728
INFO:__main__:  Num Epochs = 120
INFO:__main__:  Instantaneous batch size per device = 1
INFO:__main__:  Total train batch size (w. parallel, distributed & accumulation) = 8
INFO:__main__:  Gradient Accumulation steps = 8
INFO:__main__:  Total optimization steps = 70920
Steps:   0%|                                                                                                                        | 0/70920 [00:00<?, ?it/s]/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/utils/data/dataloader.py:557: UserWarning: This DataLoader will create 4 worker processes in total. Our suggested max number of worker in current system is 1, which is smaller than what this DataLoader is going to create. Please be aware that excessive worker creation might get DataLoader running slow or even freeze, lower the worker number to avoid potential slowness/freeze if necessary.
  warnings.warn(_create_warning_msg(
latents: torch.Size([1, 6, 4, 32, 64])
conditional_latents: torch.Size([1, 6, 4, 32, 64])
time steps: tensor([-0.0825], device='cuda:0')
before controlnet: torch.Size([1, 6, 8, 32, 64]) torch.Size([1]) torch.Size([1, 1, 1024]) torch.Size([1, 3]) torch.Size([1, 6, 4, 256, 512]) torch.Size([1, 6, 1, 16])
1 6
latents: torch.Size([1, 6, 4, 32, 64])
conditional_latents: torch.Size([1, 6, 4, 32, 64])
time steps: tensor([0.5720], device='cuda:0')
before controlnet: torch.Size([1, 6, 8, 32, 64]) torch.Size([1]) torch.Size([1, 1, 1024]) torch.Size([1, 3]) torch.Size([1, 6, 4, 256, 512]) torch.Size([1, 6, 1, 16])
1 6
Steps:   0%|                                                                                            | 0/70920 [00:11<?, ?it/s, lr=0.0001, step_loss=0.123]
latents: torch.Size([1, 6, 4, 32, 64])
conditional_latents: torch.Size([1, 6, 4, 32, 64])
time steps: tensor([0.1191], device='cuda:0')
before controlnet: torch.Size([1, 6, 8, 32, 64]) torch.Size([1]) torch.Size([1, 1, 1024]) torch.Size([1, 3]) torch.Size([1, 6, 4, 256, 512]) torch.Size([1, 6, 1, 16])

Steps:   0%|                                                                                            | 0/70920 [00:14<?, ?it/s, lr=0.0001, step_loss=0.116]
latents: torch.Size([1, 6, 4, 32, 64])
conditional_latents: torch.Size([1, 6, 4, 32, 64])
time steps: tensor([0.5259], device='cuda:0')
before controlnet: torch.Size([1, 6, 8, 32, 64]) torch.Size([1]) torch.Size([1, 1, 1024]) torch.Size([1, 3]) torch.Size([1, 6, 4, 256, 512]) torch.Size([1, 6, 1, 16])
1 6
latents: torch.Size([1, 6, 4, 32, 64])
conditional_latents: torch.Size([1, 6, 4, 32, 64])
time steps: tensor([-0.1490], device='cuda:0')
before controlnet: torch.Size([1, 6, 8, 32, 64]) torch.Size([1]) torch.Size([1, 1, 1024]) torch.Size([1, 3]) torch.Size([1, 6, 4, 256, 512]) torch.Size([1, 6, 1, 16])

Steps:   0%|                                                                                            | 0/70920 [00:17<?, ?it/s, lr=0.0001, step_loss=0.121]
latents: torch.Size([1, 6, 4, 32, 64])
conditional_latents: torch.Size([1, 6, 4, 32, 64])
time steps: tensor([-0.2162], device='cuda:0')
before controlnet: torch.Size([1, 6, 8, 32, 64]) torch.Size([1]) torch.Size([1, 1, 1024]) torch.Size([1, 3]) torch.Size([1, 6, 4, 256, 512]) torch.Size([1, 6, 1, 16])

Steps:   0%|                                                                                            | 0/70920 [00:18<?, ?it/s, lr=0.0001, step_loss=0.161]
latents: torch.Size([1, 6, 4, 32, 64])
conditional_latents: torch.Size([1, 6, 4, 32, 64])
time steps: tensor([0.4049], device='cuda:0')
before controlnet: torch.Size([1, 6, 8, 32, 64]) torch.Size([1]) torch.Size([1, 1, 1024]) torch.Size([1, 3]) torch.Size([1, 6, 4, 256, 512]) torch.Size([1, 6, 1, 16])
1 6
latents: torch.Size([1, 6, 4, 32, 64])
conditional_latents: torch.Size([1, 6, 4, 32, 64])
time steps: tensor([0.1132], device='cuda:0')
before controlnet: torch.Size([1, 6, 8, 32, 64]) torch.Size([1]) torch.Size([1, 1, 1024]) torch.Size([1, 3]) torch.Size([1, 6, 4, 256, 512]) torch.Size([1, 6, 1, 16])
Steps:   0%|                                                                                | 1/70920 [00:21<418:42:12, 21.25s/it, lr=0.0001, step_loss=0.136]INFO:__main__:Running validation...
 Generating 1 videos.
{'insert_light', 'multi_frame', 'controlnet'} was not found in config. Values will be initialized to default values.
                                                                                                                                                              Loaded feature_extractor as CLIPImageProcessor from `feature_extractor` subfolder of stabilityai/stable-video-diffusion-img2vid.
{'rescale_betas_zero_snr', 'final_sigmas_type'} was not found in config. Values will be initialized to default values.                  | 0/5 [00:00<?, ?it/s]
Loaded scheduler as EulerDiscreteScheduler from `scheduler` subfolder of stabilityai/stable-video-diffusion-img2vid.
Loading pipeline components...: 100%|██████████████████████████████████████████████████████████████████████████████████████████| 5/5 [00:00<00:00, 241.56it/s]
Traceback (most recent call last):
  File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/train_svd_controlnet.py", line 2002, in <module>
    main()
  File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/train_svd_controlnet.py", line 1877, in main
    print(train_images.shape)
AttributeError: 'list' object has no attribute 'shape'