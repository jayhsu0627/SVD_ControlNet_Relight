NODELIST=gammagpu17
MASTER_ADDR=gammagpu17
Traceback (most recent call last):
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/bin/accelerate", line 8, in <module>
Traceback (most recent call last):
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/bin/accelerate", line 8, in <module>
Traceback (most recent call last):
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/bin/accelerate", line 8, in <module>
    sys.exit(main())
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/commands/accelerate_cli.py", line 48, in main
    sys.exit(main())
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/commands/accelerate_cli.py", line 48, in main
    sys.exit(main())
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/commands/accelerate_cli.py", line 48, in main
    args.func(args)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/commands/launch.py", line 1097, in launch_command
    args.func(args)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/commands/launch.py", line 1097, in launch_command
    args.func(args)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/commands/launch.py", line 1097, in launch_command
    multi_gpu_launcher(args)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/commands/launch.py", line 734, in multi_gpu_launcher
    multi_gpu_launcher(args)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/commands/launch.py", line 734, in multi_gpu_launcher
    multi_gpu_launcher(args)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/commands/launch.py", line 734, in multi_gpu_launcher
    distrib_run.run(args)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/run.py", line 892, in run
    distrib_run.run(args)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/run.py", line 892, in run
    distrib_run.run(args)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/run.py", line 892, in run
    elastic_launch(
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 133, in __call__
    elastic_launch(
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 133, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 255, in launch_agent
    elastic_launch(
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 133, in __call__
    result = agent.run()
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/elastic/metrics/api.py", line 124, in wrapper
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 255, in launch_agent
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 255, in launch_agent
    result = f(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/elastic/agent/server/api.py", line 680, in run
    result = agent.run()
    result = agent.run()
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/elastic/metrics/api.py", line 124, in wrapper
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/elastic/metrics/api.py", line 124, in wrapper
    result = self._invoke_run(role)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/elastic/agent/server/api.py", line 829, in _invoke_run
    result = f(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/elastic/agent/server/api.py", line 680, in run
    result = f(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/elastic/agent/server/api.py", line 680, in run
    self._initialize_workers(self._worker_group)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/elastic/metrics/api.py", line 124, in wrapper
    result = self._invoke_run(role)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/elastic/agent/server/api.py", line 829, in _invoke_run
    result = self._invoke_run(role)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/elastic/agent/server/api.py", line 829, in _invoke_run
    result = f(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/elastic/agent/server/api.py", line 652, in _initialize_workers
    self._initialize_workers(self._worker_group)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/elastic/metrics/api.py", line 124, in wrapper
    self._initialize_workers(self._worker_group)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/elastic/metrics/api.py", line 124, in wrapper
    result = f(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/elastic/agent/server/api.py", line 652, in _initialize_workers
    self._rendezvous(worker_group)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/elastic/metrics/api.py", line 124, in wrapper
    result = f(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/elastic/agent/server/api.py", line 489, in _rendezvous
    result = f(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/elastic/agent/server/api.py", line 652, in _initialize_workers
    rdzv_info = spec.rdzv_handler.next_rendezvous()
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/elastic/rendezvous/static_tcp_rendezvous.py", line 66, in next_rendezvous
    self._rendezvous(worker_group)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/elastic/metrics/api.py", line 124, in wrapper
    self._rendezvous(worker_group)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/elastic/metrics/api.py", line 124, in wrapper
    result = f(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/elastic/agent/server/api.py", line 489, in _rendezvous
    rdzv_info = spec.rdzv_handler.next_rendezvous()
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/elastic/rendezvous/static_tcp_rendezvous.py", line 66, in next_rendezvous
    self._store = TCPStore(  # type: ignore[call-arg]
RuntimeError: The server socket has failed to listen on any local network address. useIpv6: 0, code: -98, name: EADDRINUSE, message: address already in use
    self._store = TCPStore(  # type: ignore[call-arg]
RuntimeError: The server socket has failed to listen on any local network address. useIpv6: 0, code: -98, name: EADDRINUSE, message: address already in use
    result = f(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/elastic/agent/server/api.py", line 489, in _rendezvous
    rdzv_info = spec.rdzv_handler.next_rendezvous()
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/elastic/rendezvous/static_tcp_rendezvous.py", line 66, in next_rendezvous
    self._store = TCPStore(  # type: ignore[call-arg]
RuntimeError: The server socket has failed to listen on any local network address. useIpv6: 0, code: -98, name: EADDRINUSE, message: address already in use
srun: error: gammagpu17: tasks 0-1,3: Exited with exit code 1
/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/xformers/ops/fmha/flash.py:211: FutureWarning: `torch.library.impl_abstract` was renamed to `torch.library.register_fake`. Please use that instead; we will remove `torch.library.impl_abstract` in a future version of PyTorch.
  @torch.library.impl_abstract("xformers_flash::flash_fwd")
/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/xformers/ops/fmha/flash.py:211: FutureWarning: `torch.library.impl_abstract` was renamed to `torch.library.register_fake`. Please use that instead; we will remove `torch.library.impl_abstract` in a future version of PyTorch.
  @torch.library.impl_abstract("xformers_flash::flash_fwd")
/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/xformers/ops/fmha/flash.py:211: FutureWarning: `torch.library.impl_abstract` was renamed to `torch.library.register_fake`. Please use that instead; we will remove `torch.library.impl_abstract` in a future version of PyTorch.
  @torch.library.impl_abstract("xformers_flash::flash_fwd")
/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/xformers/ops/fmha/flash.py:211: FutureWarning: `torch.library.impl_abstract` was renamed to `torch.library.register_fake`. Please use that instead; we will remove `torch.library.impl_abstract` in a future version of PyTorch.
  @torch.library.impl_abstract("xformers_flash::flash_fwd")
/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/xformers/ops/fmha/flash.py:344: FutureWarning: `torch.library.impl_abstract` was renamed to `torch.library.register_fake`. Please use that instead; we will remove `torch.library.impl_abstract` in a future version of PyTorch.
  @torch.library.impl_abstract("xformers_flash::flash_bwd")
/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/xformers/ops/fmha/flash.py:344: FutureWarning: `torch.library.impl_abstract` was renamed to `torch.library.register_fake`. Please use that instead; we will remove `torch.library.impl_abstract` in a future version of PyTorch.
  @torch.library.impl_abstract("xformers_flash::flash_bwd")
/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/xformers/ops/fmha/flash.py:344: FutureWarning: `torch.library.impl_abstract` was renamed to `torch.library.register_fake`. Please use that instead; we will remove `torch.library.impl_abstract` in a future version of PyTorch.
  @torch.library.impl_abstract("xformers_flash::flash_bwd")
/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/xformers/ops/fmha/flash.py:344: FutureWarning: `torch.library.impl_abstract` was renamed to `torch.library.register_fake`. Please use that instead; we will remove `torch.library.impl_abstract` in a future version of PyTorch.
  @torch.library.impl_abstract("xformers_flash::flash_bwd")
/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/diffusers/models/transformers/transformer_2d.py:34: FutureWarning: `Transformer2DModelOutput` is deprecated and will be removed in version 1.0.0. Importing `Transformer2DModelOutput` from `diffusers.models.transformer_2d` is deprecated and this will be removed in a future version. Please use `from diffusers.models.modeling_outputs import Transformer2DModelOutput`, instead.
  deprecate("Transformer2DModelOutput", "1.0.0", deprecation_message)
/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/diffusers/models/transformers/transformer_2d.py:34: FutureWarning: `Transformer2DModelOutput` is deprecated and will be removed in version 1.0.0. Importing `Transformer2DModelOutput` from `diffusers.models.transformer_2d` is deprecated and this will be removed in a future version. Please use `from diffusers.models.modeling_outputs import Transformer2DModelOutput`, instead.
  deprecate("Transformer2DModelOutput", "1.0.0", deprecation_message)
/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/diffusers/models/transformers/transformer_2d.py:34: FutureWarning: `Transformer2DModelOutput` is deprecated and will be removed in version 1.0.0. Importing `Transformer2DModelOutput` from `diffusers.models.transformer_2d` is deprecated and this will be removed in a future version. Please use `from diffusers.models.modeling_outputs import Transformer2DModelOutput`, instead.
  deprecate("Transformer2DModelOutput", "1.0.0", deprecation_message)
/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/diffusers/models/transformers/transformer_2d.py:34: FutureWarning: `Transformer2DModelOutput` is deprecated and will be removed in version 1.0.0. Importing `Transformer2DModelOutput` from `diffusers.models.transformer_2d` is deprecated and this will be removed in a future version. Please use `from diffusers.models.modeling_outputs import Transformer2DModelOutput`, instead.
  deprecate("Transformer2DModelOutput", "1.0.0", deprecation_message)
WARNING:accelerate.utils.other:Detected kernel version 4.18.0, which is below the recommended minimum of 5.5.0; this can cause the process to hang. It is recommended to upgrade the kernel to the minimum version or higher.
wandb: Currently logged in as: sjxu (sjxu_gamma). Use `wandb login --relogin` to force relogin
wandb: Currently logged in as: sjxu (sjxu_gamma). Use `wandb login --relogin` to force relogin
wandb: Currently logged in as: sjxu (sjxu_gamma). Use `wandb login --relogin` to force relogin
wandb: Currently logged in as: sjxu (sjxu_gamma). Use `wandb login --relogin` to force relogin
wandb: Appending key for api.wandb.ai to your netrc file: /fs/nexus-scratch/sjxu/.netrc
wandb: Appending key for api.wandb.ai to your netrc file: /fs/nexus-scratch/sjxu/.netrc
wandb: Appending key for api.wandb.ai to your netrc file: /fs/nexus-scratch/sjxu/.netrc
wandb: Appending key for api.wandb.ai to your netrc file: /fs/nexus-scratch/sjxu/.netrc
INFO:__main__:Distributed environment: MULTI_GPU  Backend: nccl
Num processes: 4
Process index: 3
Local process index: 3
Device: cuda:3

Mixed precision type: fp16

INFO:__main__:Distributed environment: MULTI_GPU  Backend: nccl
Num processes: 4
Process index: 2
Local process index: 2
Device: cuda:2

Mixed precision type: fp16

INFO:__main__:Distributed environment: MULTI_GPU  Backend: nccl
Num processes: 4
Process index: 1
Local process index: 1
Device: cuda:1

Mixed precision type: fp16

INFO:__main__:Distributed environment: MULTI_GPU  Backend: nccl
Num processes: 4
Process index: 0
Local process index: 0
Device: cuda:0

Mixed precision type: fp16

{'final_sigmas_type', 'rescale_betas_zero_snr'} was not found in config. Values will be initialized to default values.
prediction_type: v_prediction
prediction_type: v_prediction
prediction_type: v_prediction
prediction_type: v_prediction
Setting up [LPIPS] perceptual loss: trunk [alex], v[0.1], spatial [off]
Setting up [LPIPS] perceptual loss: trunk [alex], v[0.1], spatial [off]
/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=AlexNet_Weights.IMAGENET1K_V1`. You can also use `weights=AlexNet_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=AlexNet_Weights.IMAGENET1K_V1`. You can also use `weights=AlexNet_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Setting up [LPIPS] perceptual loss: trunk [alex], v[0.1], spatial [off]
/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=AlexNet_Weights.IMAGENET1K_V1`. You can also use `weights=AlexNet_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Loading model from: /fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/lpips/weights/v0.1/alex.pth
Loading model from: /fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/lpips/weights/v0.1/alex.pth
Loading model from: /fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/lpips/weights/v0.1/alex.pth
Setting up [LPIPS] perceptual loss: trunk [alex], v[0.1], spatial [off]
/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=AlexNet_Weights.IMAGENET1K_V1`. You can also use `weights=AlexNet_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Loading model from: /fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/lpips/weights/v0.1/alex.pth
FrozenDict([('sample_size', 96), ('in_channels', 8), ('out_channels', 4), ('down_block_types', ['CrossAttnDownBlockSpatioTemporal', 'CrossAttnDownBlockSpatioTemporal', 'CrossAttnDownBlockSpatioTemporal', 'DownBlockSpatioTemporal']), ('up_block_types', ['UpBlockSpatioTemporal', 'CrossAttnUpBlockSpatioTemporal', 'CrossAttnUpBlockSpatioTemporal', 'CrossAttnUpBlockSpatioTemporal']), ('block_out_channels', [320, 640, 1280, 1280]), ('addition_time_embed_dim', 256), ('projection_class_embeddings_input_dim', 768), ('layers_per_block', 2), ('cross_attention_dim', 1024), ('transformer_layers_per_block', 1), ('num_attention_heads', [5, 10, 20, 20]), ('num_frames', 14), ('_class_name', 'UNetSpatioTemporalConditionControlNetModel'), ('_diffusers_version', '0.24.0.dev0'), ('_name_or_path', 'stabilityai/stable-video-diffusion-img2vid')])
INFO:__main__:Initializing controlnet weights from unet
layers per block is 2
FrozenDict([('sample_size', 96), ('in_channels', 8), ('out_channels', 4), ('down_block_types', ['CrossAttnDownBlockSpatioTemporal', 'CrossAttnDownBlockSpatioTemporal', 'CrossAttnDownBlockSpatioTemporal', 'DownBlockSpatioTemporal']), ('up_block_types', ['UpBlockSpatioTemporal', 'CrossAttnUpBlockSpatioTemporal', 'CrossAttnUpBlockSpatioTemporal', 'CrossAttnUpBlockSpatioTemporal']), ('block_out_channels', [320, 640, 1280, 1280]), ('addition_time_embed_dim', 256), ('projection_class_embeddings_input_dim', 768), ('layers_per_block', 2), ('cross_attention_dim', 1024), ('transformer_layers_per_block', 1), ('num_attention_heads', [5, 10, 20, 20]), ('num_frames', 14), ('_class_name', 'UNetSpatioTemporalConditionControlNetModel'), ('_diffusers_version', '0.24.0.dev0'), ('_name_or_path', 'stabilityai/stable-video-diffusion-img2vid')])
layers per block is 2
FrozenDict([('sample_size', 96), ('in_channels', 8), ('out_channels', 4), ('down_block_types', ['CrossAttnDownBlockSpatioTemporal', 'CrossAttnDownBlockSpatioTemporal', 'CrossAttnDownBlockSpatioTemporal', 'DownBlockSpatioTemporal']), ('up_block_types', ['UpBlockSpatioTemporal', 'CrossAttnUpBlockSpatioTemporal', 'CrossAttnUpBlockSpatioTemporal', 'CrossAttnUpBlockSpatioTemporal']), ('block_out_channels', [320, 640, 1280, 1280]), ('addition_time_embed_dim', 256), ('projection_class_embeddings_input_dim', 768), ('layers_per_block', 2), ('cross_attention_dim', 1024), ('transformer_layers_per_block', 1), ('num_attention_heads', [5, 10, 20, 20]), ('num_frames', 14), ('_class_name', 'UNetSpatioTemporalConditionControlNetModel'), ('_diffusers_version', '0.24.0.dev0'), ('_name_or_path', 'stabilityai/stable-video-diffusion-img2vid')])
layers per block is 2
FrozenDict([('sample_size', 96), ('in_channels', 8), ('out_channels', 4), ('down_block_types', ['CrossAttnDownBlockSpatioTemporal', 'CrossAttnDownBlockSpatioTemporal', 'CrossAttnDownBlockSpatioTemporal', 'DownBlockSpatioTemporal']), ('up_block_types', ['UpBlockSpatioTemporal', 'CrossAttnUpBlockSpatioTemporal', 'CrossAttnUpBlockSpatioTemporal', 'CrossAttnUpBlockSpatioTemporal']), ('block_out_channels', [320, 640, 1280, 1280]), ('addition_time_embed_dim', 256), ('projection_class_embeddings_input_dim', 768), ('layers_per_block', 2), ('cross_attention_dim', 1024), ('transformer_layers_per_block', 1), ('num_attention_heads', [5, 10, 20, 20]), ('num_frames', 14), ('_class_name', 'UNetSpatioTemporalConditionControlNetModel'), ('_diffusers_version', '0.24.0.dev0'), ('_name_or_path', 'stabilityai/stable-video-diffusion-img2vid')])
layers per block is 2
1
1
1
1
data scale: 5910
length 5910
sample size (512, 512)
data scale: 5910
length 5910
sample size (512, 512)
data scale: 5910
data scale: 5910
length 5910
sample size (512, 512)
length 5910
sample size (512, 512)
gammagpu17:2198138:2198138 [0] NCCL INFO Bootstrap : Using bond0:192.168.44.28<0>
gammagpu17:2198138:2198138 [0] NCCL INFO NET/Plugin : dlerror=libnccl-net.so: cannot open shared object file: No such file or directory No plugin found (libnccl-net.so), using internal implementation
gammagpu17:2198138:2198138 [0] NCCL INFO cudaDriverVersion 12040
NCCL version 2.20.5+cuda12.4
gammagpu17:2198139:2198139 [1] NCCL INFO cudaDriverVersion 12040
gammagpu17:2198139:2198139 [1] NCCL INFO Bootstrap : Using bond0:192.168.44.28<0>
gammagpu17:2198139:2198139 [1] NCCL INFO NET/Plugin : dlerror=libnccl-net.so: cannot open shared object file: No such file or directory No plugin found (libnccl-net.so), using internal implementation
gammagpu17:2198141:2198141 [3] NCCL INFO cudaDriverVersion 12040
gammagpu17:2198141:2198141 [3] NCCL INFO Bootstrap : Using bond0:192.168.44.28<0>
gammagpu17:2198141:2198141 [3] NCCL INFO NET/Plugin : dlerror=libnccl-net.so: cannot open shared object file: No such file or directory No plugin found (libnccl-net.so), using internal implementation
gammagpu17:2198140:2198140 [2] NCCL INFO cudaDriverVersion 12040
gammagpu17:2198140:2198140 [2] NCCL INFO Bootstrap : Using bond0:192.168.44.28<0>
gammagpu17:2198140:2198140 [2] NCCL INFO NET/Plugin : dlerror=libnccl-net.so: cannot open shared object file: No such file or directory No plugin found (libnccl-net.so), using internal implementation
gammagpu17:2198141:2198275 [3] NCCL INFO NCCL_IB_DISABLE set by environment to 1.
gammagpu17:2198140:2198276 [2] NCCL INFO NCCL_IB_DISABLE set by environment to 1.
gammagpu17:2198138:2198273 [0] NCCL INFO NCCL_IB_DISABLE set by environment to 1.
gammagpu17:2198139:2198274 [1] NCCL INFO NCCL_IB_DISABLE set by environment to 1.
gammagpu17:2198141:2198275 [3] NCCL INFO NET/Socket : Using [0]bond0:192.168.44.28<0> [1]virbr0:192.168.122.1<0> [2]enp67s0f3u2u3c2:fe80::401c:2eff:fedd:e48a%enp67s0f3u2u3c2<0>
gammagpu17:2198140:2198276 [2] NCCL INFO NET/Socket : Using [0]bond0:192.168.44.28<0> [1]virbr0:192.168.122.1<0> [2]enp67s0f3u2u3c2:fe80::401c:2eff:fedd:e48a%enp67s0f3u2u3c2<0>
gammagpu17:2198141:2198275 [3] NCCL INFO Using non-device net plugin version 0
gammagpu17:2198141:2198275 [3] NCCL INFO Using network Socket
gammagpu17:2198140:2198276 [2] NCCL INFO Using non-device net plugin version 0
gammagpu17:2198140:2198276 [2] NCCL INFO Using network Socket
gammagpu17:2198138:2198273 [0] NCCL INFO NET/Socket : Using [0]bond0:192.168.44.28<0> [1]virbr0:192.168.122.1<0> [2]enp67s0f3u2u3c2:fe80::401c:2eff:fedd:e48a%enp67s0f3u2u3c2<0>
gammagpu17:2198139:2198274 [1] NCCL INFO NET/Socket : Using [0]bond0:192.168.44.28<0> [1]virbr0:192.168.122.1<0> [2]enp67s0f3u2u3c2:fe80::401c:2eff:fedd:e48a%enp67s0f3u2u3c2<0>
gammagpu17:2198138:2198273 [0] NCCL INFO Using non-device net plugin version 0
gammagpu17:2198138:2198273 [0] NCCL INFO Using network Socket
gammagpu17:2198139:2198274 [1] NCCL INFO Using non-device net plugin version 0
gammagpu17:2198139:2198274 [1] NCCL INFO Using network Socket
gammagpu17:2198140:2198276 [2] NCCL INFO comm 0x5566e5b59880 rank 2 nranks 4 cudaDev 2 nvmlDev 2 busId 81000 commId 0x49b717cd4b068101 - Init START
gammagpu17:2198141:2198275 [3] NCCL INFO comm 0x55d6eadbbf00 rank 3 nranks 4 cudaDev 3 nvmlDev 3 busId c1000 commId 0x49b717cd4b068101 - Init START
gammagpu17:2198139:2198274 [1] NCCL INFO comm 0x559ba5ffbf80 rank 1 nranks 4 cudaDev 1 nvmlDev 1 busId 41000 commId 0x49b717cd4b068101 - Init START
gammagpu17:2198138:2198273 [0] NCCL INFO comm 0x562361078f00 rank 0 nranks 4 cudaDev 0 nvmlDev 0 busId 1000 commId 0x49b717cd4b068101 - Init START
gammagpu17:2198140:2198276 [2] NCCL INFO NVLS multicast support is not available on dev 2
gammagpu17:2198141:2198275 [3] NCCL INFO NVLS multicast support is not available on dev 3
gammagpu17:2198139:2198274 [1] NCCL INFO NVLS multicast support is not available on dev 1
gammagpu17:2198138:2198273 [0] NCCL INFO NVLS multicast support is not available on dev 0
gammagpu17:2198141:2198275 [3] NCCL INFO comm 0x55d6eadbbf00 rank 3 nRanks 4 nNodes 1 localRanks 4 localRank 3 MNNVL 0
gammagpu17:2198141:2198275 [3] NCCL INFO Trees [0] -1/-1/-1->3->2 [1] -1/-1/-1->3->2 [2] -1/-1/-1->3->2 [3] -1/-1/-1->3->2
gammagpu17:2198141:2198275 [3] NCCL INFO P2P Chunksize set to 131072
gammagpu17:2198138:2198273 [0] NCCL INFO comm 0x562361078f00 rank 0 nRanks 4 nNodes 1 localRanks 4 localRank 0 MNNVL 0
gammagpu17:2198140:2198276 [2] NCCL INFO comm 0x5566e5b59880 rank 2 nRanks 4 nNodes 1 localRanks 4 localRank 2 MNNVL 0
gammagpu17:2198139:2198274 [1] NCCL INFO comm 0x559ba5ffbf80 rank 1 nRanks 4 nNodes 1 localRanks 4 localRank 1 MNNVL 0
gammagpu17:2198138:2198273 [0] NCCL INFO Channel 00/04 :    0   1   2   3
gammagpu17:2198138:2198273 [0] NCCL INFO Channel 01/04 :    0   1   2   3
gammagpu17:2198140:2198276 [2] NCCL INFO Trees [0] 3/-1/-1->2->1 [1] 3/-1/-1->2->1 [2] 3/-1/-1->2->1 [3] 3/-1/-1->2->1
gammagpu17:2198138:2198273 [0] NCCL INFO Channel 02/04 :    0   1   2   3
gammagpu17:2198138:2198273 [0] NCCL INFO Channel 03/04 :    0   1   2   3
gammagpu17:2198140:2198276 [2] NCCL INFO P2P Chunksize set to 131072
gammagpu17:2198139:2198274 [1] NCCL INFO Trees [0] 2/-1/-1->1->0 [1] 2/-1/-1->1->0 [2] 2/-1/-1->1->0 [3] 2/-1/-1->1->0
gammagpu17:2198138:2198273 [0] NCCL INFO Trees [0] 1/-1/-1->0->-1 [1] 1/-1/-1->0->-1 [2] 1/-1/-1->0->-1 [3] 1/-1/-1->0->-1
gammagpu17:2198139:2198274 [1] NCCL INFO P2P Chunksize set to 131072
gammagpu17:2198138:2198273 [0] NCCL INFO P2P Chunksize set to 131072
gammagpu17:2198139:2198274 [1] NCCL INFO Channel 00/0 : 1[1] -> 2[2] via P2P/CUMEM
gammagpu17:2198139:2198274 [1] NCCL INFO Channel 01/0 : 1[1] -> 2[2] via P2P/CUMEM
gammagpu17:2198138:2198273 [0] NCCL INFO Channel 00/0 : 0[0] -> 1[1] via P2P/CUMEM
gammagpu17:2198139:2198274 [1] NCCL INFO Channel 02/0 : 1[1] -> 2[2] via P2P/CUMEM
gammagpu17:2198139:2198274 [1] NCCL INFO Channel 03/0 : 1[1] -> 2[2] via P2P/CUMEM
gammagpu17:2198140:2198276 [2] NCCL INFO Channel 00/0 : 2[2] -> 3[3] via P2P/CUMEM
gammagpu17:2198138:2198273 [0] NCCL INFO Channel 01/0 : 0[0] -> 1[1] via P2P/CUMEM
gammagpu17:2198141:2198275 [3] NCCL INFO Channel 00/0 : 3[3] -> 0[0] via P2P/CUMEM
gammagpu17:2198140:2198276 [2] NCCL INFO Channel 01/0 : 2[2] -> 3[3] via P2P/CUMEM
gammagpu17:2198138:2198273 [0] NCCL INFO Channel 02/0 : 0[0] -> 1[1] via P2P/CUMEM
gammagpu17:2198141:2198275 [3] NCCL INFO Channel 01/0 : 3[3] -> 0[0] via P2P/CUMEM
gammagpu17:2198140:2198276 [2] NCCL INFO Channel 02/0 : 2[2] -> 3[3] via P2P/CUMEM
gammagpu17:2198138:2198273 [0] NCCL INFO Channel 03/0 : 0[0] -> 1[1] via P2P/CUMEM
gammagpu17:2198141:2198275 [3] NCCL INFO Channel 02/0 : 3[3] -> 0[0] via P2P/CUMEM
gammagpu17:2198140:2198276 [2] NCCL INFO Channel 03/0 : 2[2] -> 3[3] via P2P/CUMEM
gammagpu17:2198141:2198275 [3] NCCL INFO Channel 03/0 : 3[3] -> 0[0] via P2P/CUMEM
gammagpu17:2198140:2198276 [2] NCCL INFO Connected all rings
gammagpu17:2198139:2198274 [1] NCCL INFO Connected all rings
gammagpu17:2198141:2198275 [3] NCCL INFO Connected all rings
gammagpu17:2198141:2198275 [3] NCCL INFO Channel 00/0 : 3[3] -> 2[2] via P2P/CUMEM
gammagpu17:2198138:2198273 [0] NCCL INFO Connected all rings
gammagpu17:2198141:2198275 [3] NCCL INFO Channel 01/0 : 3[3] -> 2[2] via P2P/CUMEM
gammagpu17:2198141:2198275 [3] NCCL INFO Channel 02/0 : 3[3] -> 2[2] via P2P/CUMEM
gammagpu17:2198140:2198276 [2] NCCL INFO Channel 00/0 : 2[2] -> 1[1] via P2P/CUMEM
gammagpu17:2198141:2198275 [3] NCCL INFO Channel 03/0 : 3[3] -> 2[2] via P2P/CUMEM
gammagpu17:2198139:2198274 [1] NCCL INFO Channel 00/0 : 1[1] -> 0[0] via P2P/CUMEM
gammagpu17:2198140:2198276 [2] NCCL INFO Channel 01/0 : 2[2] -> 1[1] via P2P/CUMEM
gammagpu17:2198140:2198276 [2] NCCL INFO Channel 02/0 : 2[2] -> 1[1] via P2P/CUMEM
gammagpu17:2198139:2198274 [1] NCCL INFO Channel 01/0 : 1[1] -> 0[0] via P2P/CUMEM
gammagpu17:2198139:2198274 [1] NCCL INFO Channel 02/0 : 1[1] -> 0[0] via P2P/CUMEM
gammagpu17:2198140:2198276 [2] NCCL INFO Channel 03/0 : 2[2] -> 1[1] via P2P/CUMEM
gammagpu17:2198139:2198274 [1] NCCL INFO Channel 03/0 : 1[1] -> 0[0] via P2P/CUMEM
gammagpu17:2198141:2198275 [3] NCCL INFO Connected all trees
gammagpu17:2198141:2198275 [3] NCCL INFO threadThresholds 8/8/64 | 32/8/64 | 512 | 512
gammagpu17:2198141:2198275 [3] NCCL INFO 4 coll channels, 0 collnet channels, 0 nvls channels, 4 p2p channels, 2 p2p channels per peer
gammagpu17:2198138:2198273 [0] NCCL INFO Connected all trees
gammagpu17:2198138:2198273 [0] NCCL INFO threadThresholds 8/8/64 | 32/8/64 | 512 | 512
gammagpu17:2198138:2198273 [0] NCCL INFO 4 coll channels, 0 collnet channels, 0 nvls channels, 4 p2p channels, 2 p2p channels per peer
gammagpu17:2198140:2198276 [2] NCCL INFO Connected all trees
gammagpu17:2198140:2198276 [2] NCCL INFO threadThresholds 8/8/64 | 32/8/64 | 512 | 512
gammagpu17:2198140:2198276 [2] NCCL INFO 4 coll channels, 0 collnet channels, 0 nvls channels, 4 p2p channels, 2 p2p channels per peer
gammagpu17:2198139:2198274 [1] NCCL INFO Connected all trees
gammagpu17:2198139:2198274 [1] NCCL INFO threadThresholds 8/8/64 | 32/8/64 | 512 | 512
gammagpu17:2198139:2198274 [1] NCCL INFO 4 coll channels, 0 collnet channels, 0 nvls channels, 4 p2p channels, 2 p2p channels per peer
gammagpu17:2198138:2198273 [0] NCCL INFO comm 0x562361078f00 rank 0 nranks 4 cudaDev 0 nvmlDev 0 busId 1000 commId 0x49b717cd4b068101 - Init COMPLETE
gammagpu17:2198139:2198274 [1] NCCL INFO comm 0x559ba5ffbf80 rank 1 nranks 4 cudaDev 1 nvmlDev 1 busId 41000 commId 0x49b717cd4b068101 - Init COMPLETE
gammagpu17:2198141:2198275 [3] NCCL INFO comm 0x55d6eadbbf00 rank 3 nranks 4 cudaDev 3 nvmlDev 3 busId c1000 commId 0x49b717cd4b068101 - Init COMPLETE
gammagpu17:2198140:2198276 [2] NCCL INFO comm 0x5566e5b59880 rank 2 nranks 4 cudaDev 2 nvmlDev 2 busId 81000 commId 0x49b717cd4b068101 - Init COMPLETE
wandb: Tracking run with wandb version 0.17.8
wandb: Run data is saved locally in /fs/nexus-scratch/sjxu/svd-temporal-controlnet/wandb/run-20241210_220411-zsyc4ixz
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run denim-universe-128
wandb: ⭐️ View project at https://wandb.ai/sjxu_gamma/SVD_Con_Mul
wandb: 🚀 View run at https://wandb.ai/sjxu_gamma/SVD_Con_Mul/runs/zsyc4ixz
INFO:__main__:***** Running training *****
INFO:__main__:  Num examples = 4728
INFO:__main__:  Num Epochs = 120
INFO:__main__:  Instantaneous batch size per device = 2
INFO:__main__:  Total train batch size (w. parallel, distributed & accumulation) = 64
INFO:__main__:  Gradient Accumulation steps = 8
INFO:__main__:  Total optimization steps = 8880
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 2.8209e-01,  4.4583e-01,  1.3093e-01,  1.5108e-01,  3.0825e-01,
           2.6714e-01, -2.4745e-01,  9.0525e-02, -4.0259e-01, -2.9383e-01,
           2.1854e-01, -2.6731e-01, -2.6409e-01, -9.0582e-02, -2.8543e-01,
          -4.3826e-01]],

        [[ 2.8209e-01,  4.1893e-01,  1.1291e-01, -2.2469e-01, -4.3077e-01,
           2.1648e-01, -2.6486e-01, -1.1610e-01, -2.8606e-01, -5.0961e-02,
          -2.6338e-01, -2.8723e-01, -2.3569e-01,  1.5405e-01, -1.7490e-01,
           5.4102e-01]],

        [[ 2.8209e-01,  3.5258e-01,  3.3642e-01, -3.5266e-02, -5.6903e-02,
           5.4283e-01,  1.3317e-01, -5.4296e-02, -2.8160e-01, -2.1505e-01,
          -1.0366e-01,  4.5197e-01, -1.6177e-01, -4.5208e-02, -5.1300e-01,
           6.6305e-02]],

        [[ 2.8209e-01, -1.0072e-03,  4.8793e-01, -2.5631e-02,  1.1815e-04,
          -2.2492e-03,  6.2818e-01, -5.7233e-02,  1.5009e-03, -1.0036e-05,
           3.1216e-04, -3.7558e-03,  7.4019e-01, -9.5571e-02,  3.9655e-03,
          -8.4778e-05]],

        [[ 2.8209e-01,  1.8615e-01,  2.7397e-01, -3.5919e-01, -3.0600e-01,
           2.3340e-01, -1.7900e-02, -4.5037e-01,  2.1594e-01,  3.3184e-01,
          -4.5396e-01,  9.9613e-02, -2.9879e-01, -1.9221e-01,  3.2035e-01,
          -4.5542e-02]],

        [[ 2.8209e-01,  2.6392e-01,  3.2502e-01,  2.5187e-01,  3.0421e-01,
           3.9257e-01,  1.0329e-01,  3.7465e-01, -1.4221e-02,  1.6109e-01,
           5.3541e-01,  2.9934e-01, -1.9549e-01,  2.8567e-01, -2.5029e-02,
          -1.8541e-01]]])
tensor([[[ 2.8209e-01,  4.2376e-01,  2.3831e-01,  4.8635e-02,  9.4318e-02,
           4.6217e-01, -9.0303e-02,  5.3042e-02, -4.0549e-01, -3.6972e-01,
           1.2171e-01,  7.5104e-02, -3.2954e-01,  8.6195e-03, -5.2327e-01,
          -1.3195e-01]],

        [[ 2.8209e-01,  4.0948e-01,  2.3616e-01, -1.2363e-01, -2.3168e-01,
           4.4256e-01, -9.4354e-02, -1.3362e-01, -3.4871e-01, -2.5234e-01,
          -2.9627e-01,  6.4373e-02, -3.3043e-01, -1.9435e-02, -4.4592e-01,
           3.0503e-01]],

        [[ 2.8209e-01,  4.6354e-01,  1.4859e-01, -4.2209e-02, -8.9542e-02,
           3.1522e-01, -2.2788e-01, -2.8703e-02, -4.8760e-01, -4.9130e-01,
          -7.2047e-02, -2.3309e-01, -2.8799e-01,  2.1225e-02, -3.9233e-01,
           1.3725e-01]],

        [[ 2.8209e-01,  3.7416e-01,  2.1869e-01,  2.2563e-01,  3.8636e-01,
           3.7447e-01, -1.2585e-01,  2.2582e-01, -2.0385e-01,  2.4096e-02,
           4.5752e-01,  5.7423e-04, -3.3378e-01,  3.4628e-04, -2.4140e-01,
          -4.2125e-01]],

        [[ 2.8209e-01,  3.2839e-01,  3.5087e-01,  8.8238e-02,  1.3261e-01,
           5.2730e-01,  1.7252e-01,  1.4169e-01, -2.2895e-01, -1.4034e-01,
           2.5195e-01,  4.8483e-01, -1.1300e-01,  1.3027e-01, -4.3498e-01,
          -1.4093e-01]],

        [[ 2.8209e-01,  1.4422e-01,  4.2442e-01,  1.9441e-01,  1.2832e-01,
           2.8013e-01,  3.9855e-01,  3.7762e-01,  3.8895e-02,  6.7548e-02,
           2.9490e-01,  3.7406e-01,  2.5050e-01,  5.0425e-01,  8.9390e-02,
          -2.4193e-02]]])
tensor([[[ 2.8209e-01,  4.4583e-01,  1.3093e-01,  1.5108e-01,  3.0825e-01,
           2.6714e-01, -2.4745e-01,  9.0525e-02, -4.0259e-01, -2.9383e-01,
           2.1854e-01, -2.6731e-01, -2.6409e-01, -9.0582e-02, -2.8543e-01,
          -4.3826e-01]],

        [[ 2.8209e-01,  4.1893e-01,  1.1291e-01, -2.2469e-01, -4.3077e-01,
           2.1648e-01, -2.6486e-01, -1.1610e-01, -2.8606e-01, -5.0961e-02,
          -2.6338e-01, -2.8723e-01, -2.3569e-01,  1.5405e-01, -1.7490e-01,
           5.4102e-01]],

        [[ 2.8209e-01,  3.5258e-01,  3.3642e-01, -3.5266e-02, -5.6903e-02,
           5.4283e-01,  1.3317e-01, -5.4296e-02, -2.8160e-01, -2.1505e-01,
          -1.0366e-01,  4.5197e-01, -1.6177e-01, -4.5208e-02, -5.1300e-01,
           6.6305e-02]],

        [[ 2.8209e-01, -1.0072e-03,  4.8793e-01, -2.5631e-02,  1.1815e-04,
          -2.2492e-03,  6.2818e-01, -5.7233e-02,  1.5009e-03, -1.0036e-05,
           3.1216e-04, -3.7558e-03,  7.4019e-01, -9.5571e-02,  3.9655e-03,
          -8.4778e-05]],

        [[ 2.8209e-01,  1.8615e-01,  2.7397e-01, -3.5919e-01, -3.0600e-01,
           2.3340e-01, -1.7900e-02, -4.5037e-01,  2.1594e-01,  3.3184e-01,
          -4.5396e-01,  9.9613e-02, -2.9879e-01, -1.9221e-01,  3.2035e-01,
          -4.5542e-02]],

        [[ 2.8209e-01,  2.6392e-01,  3.2502e-01,  2.5187e-01,  3.0421e-01,
           3.9257e-01,  1.0329e-01,  3.7465e-01, -1.4221e-02,  1.6109e-01,
           5.3541e-01,  2.9934e-01, -1.9549e-01,  2.8567e-01, -2.5029e-02,
          -1.8541e-01]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 2.8209e-01,  4.2376e-01,  2.3831e-01,  4.8635e-02,  9.4318e-02,
           4.6217e-01, -9.0303e-02,  5.3042e-02, -4.0549e-01, -3.6972e-01,
           1.2171e-01,  7.5104e-02, -3.2954e-01,  8.6195e-03, -5.2327e-01,
          -1.3195e-01]],

        [[ 2.8209e-01,  4.0948e-01,  2.3616e-01, -1.2363e-01, -2.3168e-01,
           4.4256e-01, -9.4354e-02, -1.3362e-01, -3.4871e-01, -2.5234e-01,
          -2.9627e-01,  6.4373e-02, -3.3043e-01, -1.9435e-02, -4.4592e-01,
           3.0503e-01]],

        [[ 2.8209e-01,  4.6354e-01,  1.4859e-01, -4.2209e-02, -8.9542e-02,
           3.1522e-01, -2.2788e-01, -2.8703e-02, -4.8760e-01, -4.9130e-01,
          -7.2047e-02, -2.3309e-01, -2.8799e-01,  2.1225e-02, -3.9233e-01,
           1.3725e-01]],

        [[ 2.8209e-01,  3.7416e-01,  2.1869e-01,  2.2563e-01,  3.8636e-01,
           3.7447e-01, -1.2585e-01,  2.2582e-01, -2.0385e-01,  2.4096e-02,
           4.5752e-01,  5.7423e-04, -3.3378e-01,  3.4628e-04, -2.4140e-01,
          -4.2125e-01]],

        [[ 2.8209e-01,  3.2839e-01,  3.5087e-01,  8.8238e-02,  1.3261e-01,
           5.2730e-01,  1.7252e-01,  1.4169e-01, -2.2895e-01, -1.4034e-01,
           2.5195e-01,  4.8483e-01, -1.1300e-01,  1.3027e-01, -4.3498e-01,
          -1.4093e-01]],

        [[ 2.8209e-01,  1.4422e-01,  4.2442e-01,  1.9441e-01,  1.2832e-01,
           2.8013e-01,  3.9855e-01,  3.7762e-01,  3.8895e-02,  6.7548e-02,
           2.9490e-01,  3.7406e-01,  2.5050e-01,  5.0425e-01,  8.9390e-02,
          -2.4193e-02]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 2.8209e-01,  4.4583e-01,  1.3093e-01,  1.5108e-01,  3.0825e-01,
           2.6714e-01, -2.4745e-01,  9.0525e-02, -4.0259e-01, -2.9383e-01,
           2.1854e-01, -2.6731e-01, -2.6409e-01, -9.0582e-02, -2.8543e-01,
          -4.3826e-01]],

        [[ 2.8209e-01,  4.1893e-01,  1.1291e-01, -2.2469e-01, -4.3077e-01,
           2.1648e-01, -2.6486e-01, -1.1610e-01, -2.8606e-01, -5.0961e-02,
          -2.6338e-01, -2.8723e-01, -2.3569e-01,  1.5405e-01, -1.7490e-01,
           5.4102e-01]],

        [[ 2.8209e-01,  3.5258e-01,  3.3642e-01, -3.5266e-02, -5.6903e-02,
           5.4283e-01,  1.3317e-01, -5.4296e-02, -2.8160e-01, -2.1505e-01,
          -1.0366e-01,  4.5197e-01, -1.6177e-01, -4.5208e-02, -5.1300e-01,
           6.6305e-02]],

        [[ 2.8209e-01, -1.0072e-03,  4.8793e-01, -2.5631e-02,  1.1815e-04,
          -2.2492e-03,  6.2818e-01, -5.7233e-02,  1.5009e-03, -1.0036e-05,
           3.1216e-04, -3.7558e-03,  7.4019e-01, -9.5571e-02,  3.9655e-03,
          -8.4778e-05]],

        [[ 2.8209e-01,  1.8615e-01,  2.7397e-01, -3.5919e-01, -3.0600e-01,
           2.3340e-01, -1.7900e-02, -4.5037e-01,  2.1594e-01,  3.3184e-01,
          -4.5396e-01,  9.9613e-02, -2.9879e-01, -1.9221e-01,  3.2035e-01,
          -4.5542e-02]],

        [[ 2.8209e-01,  2.6392e-01,  3.2502e-01,  2.5187e-01,  3.0421e-01,
           3.9257e-01,  1.0329e-01,  3.7465e-01, -1.4221e-02,  1.6109e-01,
           5.3541e-01,  2.9934e-01, -1.9549e-01,  2.8567e-01, -2.5029e-02,
          -1.8541e-01]]])
tensor([[[ 2.8209e-01,  4.4583e-01,  1.3093e-01,  1.5108e-01,  3.0825e-01,
           2.6714e-01, -2.4745e-01,  9.0525e-02, -4.0259e-01, -2.9383e-01,
           2.1854e-01, -2.6731e-01, -2.6409e-01, -9.0582e-02, -2.8543e-01,
          -4.3826e-01]],

        [[ 2.8209e-01,  4.1893e-01,  1.1291e-01, -2.2469e-01, -4.3077e-01,
           2.1648e-01, -2.6486e-01, -1.1610e-01, -2.8606e-01, -5.0961e-02,
          -2.6338e-01, -2.8723e-01, -2.3569e-01,  1.5405e-01, -1.7490e-01,
           5.4102e-01]],

        [[ 2.8209e-01,  3.5258e-01,  3.3642e-01, -3.5266e-02, -5.6903e-02,
           5.4283e-01,  1.3317e-01, -5.4296e-02, -2.8160e-01, -2.1505e-01,
          -1.0366e-01,  4.5197e-01, -1.6177e-01, -4.5208e-02, -5.1300e-01,
           6.6305e-02]],

        [[ 2.8209e-01, -1.0072e-03,  4.8793e-01, -2.5631e-02,  1.1815e-04,
          -2.2492e-03,  6.2818e-01, -5.7233e-02,  1.5009e-03, -1.0036e-05,
           3.1216e-04, -3.7558e-03,  7.4019e-01, -9.5571e-02,  3.9655e-03,
          -8.4778e-05]],

        [[ 2.8209e-01,  1.8615e-01,  2.7397e-01, -3.5919e-01, -3.0600e-01,
           2.3340e-01, -1.7900e-02, -4.5037e-01,  2.1594e-01,  3.3184e-01,
          -4.5396e-01,  9.9613e-02, -2.9879e-01, -1.9221e-01,  3.2035e-01,
          -4.5542e-02]],

        [[ 2.8209e-01,  2.6392e-01,  3.2502e-01,  2.5187e-01,  3.0421e-01,
           3.9257e-01,  1.0329e-01,  3.7465e-01, -1.4221e-02,  1.6109e-01,
           5.3541e-01,  2.9934e-01, -1.9549e-01,  2.8567e-01, -2.5029e-02,
          -1.8541e-01]]])
tensor([[[ 2.8209e-01,  4.2376e-01,  2.3831e-01,  4.8635e-02,  9.4318e-02,
           4.6217e-01, -9.0303e-02,  5.3042e-02, -4.0549e-01, -3.6972e-01,
           1.2171e-01,  7.5104e-02, -3.2954e-01,  8.6195e-03, -5.2327e-01,
          -1.3195e-01]],

        [[ 2.8209e-01,  4.0948e-01,  2.3616e-01, -1.2363e-01, -2.3168e-01,
           4.4256e-01, -9.4354e-02, -1.3362e-01, -3.4871e-01, -2.5234e-01,
          -2.9627e-01,  6.4373e-02, -3.3043e-01, -1.9435e-02, -4.4592e-01,
           3.0503e-01]],

        [[ 2.8209e-01,  4.6354e-01,  1.4859e-01, -4.2209e-02, -8.9542e-02,
           3.1522e-01, -2.2788e-01, -2.8703e-02, -4.8760e-01, -4.9130e-01,
          -7.2047e-02, -2.3309e-01, -2.8799e-01,  2.1225e-02, -3.9233e-01,
           1.3725e-01]],

        [[ 2.8209e-01,  3.7416e-01,  2.1869e-01,  2.2563e-01,  3.8636e-01,
           3.7447e-01, -1.2585e-01,  2.2582e-01, -2.0385e-01,  2.4096e-02,
           4.5752e-01,  5.7423e-04, -3.3378e-01,  3.4628e-04, -2.4140e-01,
          -4.2125e-01]],

        [[ 2.8209e-01,  3.2839e-01,  3.5087e-01,  8.8238e-02,  1.3261e-01,
           5.2730e-01,  1.7252e-01,  1.4169e-01, -2.2895e-01, -1.4034e-01,
           2.5195e-01,  4.8483e-01, -1.1300e-01,  1.3027e-01, -4.3498e-01,
          -1.4093e-01]],

        [[ 2.8209e-01,  1.4422e-01,  4.2442e-01,  1.9441e-01,  1.2832e-01,
           2.8013e-01,  3.9855e-01,  3.7762e-01,  3.8895e-02,  6.7548e-02,
           2.9490e-01,  3.7406e-01,  2.5050e-01,  5.0425e-01,  8.9390e-02,
          -2.4193e-02]]])
tensor([[[ 2.8209e-01,  4.4583e-01,  1.3093e-01,  1.5108e-01,  3.0825e-01,
           2.6714e-01, -2.4745e-01,  9.0525e-02, -4.0259e-01, -2.9383e-01,
           2.1854e-01, -2.6731e-01, -2.6409e-01, -9.0582e-02, -2.8543e-01,
          -4.3826e-01]],

        [[ 2.8209e-01,  4.1893e-01,  1.1291e-01, -2.2469e-01, -4.3077e-01,
           2.1648e-01, -2.6486e-01, -1.1610e-01, -2.8606e-01, -5.0961e-02,
          -2.6338e-01, -2.8723e-01, -2.3569e-01,  1.5405e-01, -1.7490e-01,
           5.4102e-01]],

        [[ 2.8209e-01,  3.5258e-01,  3.3642e-01, -3.5266e-02, -5.6903e-02,
           5.4283e-01,  1.3317e-01, -5.4296e-02, -2.8160e-01, -2.1505e-01,
          -1.0366e-01,  4.5197e-01, -1.6177e-01, -4.5208e-02, -5.1300e-01,
           6.6305e-02]],

        [[ 2.8209e-01, -1.0072e-03,  4.8793e-01, -2.5631e-02,  1.1815e-04,
          -2.2492e-03,  6.2818e-01, -5.7233e-02,  1.5009e-03, -1.0036e-05,
           3.1216e-04, -3.7558e-03,  7.4019e-01, -9.5571e-02,  3.9655e-03,
          -8.4778e-05]],

        [[ 2.8209e-01,  1.8615e-01,  2.7397e-01, -3.5919e-01, -3.0600e-01,
           2.3340e-01, -1.7900e-02, -4.5037e-01,  2.1594e-01,  3.3184e-01,
          -4.5396e-01,  9.9613e-02, -2.9879e-01, -1.9221e-01,  3.2035e-01,
          -4.5542e-02]],

        [[ 2.8209e-01,  2.6392e-01,  3.2502e-01,  2.5187e-01,  3.0421e-01,
           3.9257e-01,  1.0329e-01,  3.7465e-01, -1.4221e-02,  1.6109e-01,
           5.3541e-01,  2.9934e-01, -1.9549e-01,  2.8567e-01, -2.5029e-02,
          -1.8541e-01]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 2.8209e-01,  4.4583e-01,  1.3093e-01,  1.5108e-01,  3.0825e-01,
           2.6714e-01, -2.4745e-01,  9.0525e-02, -4.0259e-01, -2.9383e-01,
           2.1854e-01, -2.6731e-01, -2.6409e-01, -9.0582e-02, -2.8543e-01,
          -4.3826e-01]],

        [[ 2.8209e-01,  4.1893e-01,  1.1291e-01, -2.2469e-01, -4.3077e-01,
           2.1648e-01, -2.6486e-01, -1.1610e-01, -2.8606e-01, -5.0961e-02,
          -2.6338e-01, -2.8723e-01, -2.3569e-01,  1.5405e-01, -1.7490e-01,
           5.4102e-01]],

        [[ 2.8209e-01,  3.5258e-01,  3.3642e-01, -3.5266e-02, -5.6903e-02,
           5.4283e-01,  1.3317e-01, -5.4296e-02, -2.8160e-01, -2.1505e-01,
          -1.0366e-01,  4.5197e-01, -1.6177e-01, -4.5208e-02, -5.1300e-01,
           6.6305e-02]],

        [[ 2.8209e-01, -1.0072e-03,  4.8793e-01, -2.5631e-02,  1.1815e-04,
          -2.2492e-03,  6.2818e-01, -5.7233e-02,  1.5009e-03, -1.0036e-05,
           3.1216e-04, -3.7558e-03,  7.4019e-01, -9.5571e-02,  3.9655e-03,
          -8.4778e-05]],

        [[ 2.8209e-01,  1.8615e-01,  2.7397e-01, -3.5919e-01, -3.0600e-01,
           2.3340e-01, -1.7900e-02, -4.5037e-01,  2.1594e-01,  3.3184e-01,
          -4.5396e-01,  9.9613e-02, -2.9879e-01, -1.9221e-01,  3.2035e-01,
          -4.5542e-02]],

        [[ 2.8209e-01,  2.6392e-01,  3.2502e-01,  2.5187e-01,  3.0421e-01,
           3.9257e-01,  1.0329e-01,  3.7465e-01, -1.4221e-02,  1.6109e-01,
           5.3541e-01,  2.9934e-01, -1.9549e-01,  2.8567e-01, -2.5029e-02,
          -1.8541e-01]]])
tensor([[[ 2.8209e-01,  4.2376e-01,  2.3831e-01,  4.8635e-02,  9.4318e-02,
           4.6217e-01, -9.0303e-02,  5.3042e-02, -4.0549e-01, -3.6972e-01,
           1.2171e-01,  7.5104e-02, -3.2954e-01,  8.6195e-03, -5.2327e-01,
          -1.3195e-01]],

        [[ 2.8209e-01,  4.0948e-01,  2.3616e-01, -1.2363e-01, -2.3168e-01,
           4.4256e-01, -9.4354e-02, -1.3362e-01, -3.4871e-01, -2.5234e-01,
          -2.9627e-01,  6.4373e-02, -3.3043e-01, -1.9435e-02, -4.4592e-01,
           3.0503e-01]],

        [[ 2.8209e-01,  4.6354e-01,  1.4859e-01, -4.2209e-02, -8.9542e-02,
           3.1522e-01, -2.2788e-01, -2.8703e-02, -4.8760e-01, -4.9130e-01,
          -7.2047e-02, -2.3309e-01, -2.8799e-01,  2.1225e-02, -3.9233e-01,
           1.3725e-01]],

        [[ 2.8209e-01,  3.7416e-01,  2.1869e-01,  2.2563e-01,  3.8636e-01,
           3.7447e-01, -1.2585e-01,  2.2582e-01, -2.0385e-01,  2.4096e-02,
           4.5752e-01,  5.7423e-04, -3.3378e-01,  3.4628e-04, -2.4140e-01,
          -4.2125e-01]],

        [[ 2.8209e-01,  3.2839e-01,  3.5087e-01,  8.8238e-02,  1.3261e-01,
           5.2730e-01,  1.7252e-01,  1.4169e-01, -2.2895e-01, -1.4034e-01,
           2.5195e-01,  4.8483e-01, -1.1300e-01,  1.3027e-01, -4.3498e-01,
          -1.4093e-01]],

        [[ 2.8209e-01,  1.4422e-01,  4.2442e-01,  1.9441e-01,  1.2832e-01,
           2.8013e-01,  3.9855e-01,  3.7762e-01,  3.8895e-02,  6.7548e-02,
           2.9490e-01,  3.7406e-01,  2.5050e-01,  5.0425e-01,  8.9390e-02,
          -2.4193e-02]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 2.8209e-01,  4.2376e-01,  2.3831e-01,  4.8635e-02,  9.4318e-02,
           4.6217e-01, -9.0303e-02,  5.3042e-02, -4.0549e-01, -3.6972e-01,
           1.2171e-01,  7.5104e-02, -3.2954e-01,  8.6195e-03, -5.2327e-01,
          -1.3195e-01]],

        [[ 2.8209e-01,  4.0948e-01,  2.3616e-01, -1.2363e-01, -2.3168e-01,
           4.4256e-01, -9.4354e-02, -1.3362e-01, -3.4871e-01, -2.5234e-01,
          -2.9627e-01,  6.4373e-02, -3.3043e-01, -1.9435e-02, -4.4592e-01,
           3.0503e-01]],

        [[ 2.8209e-01,  4.6354e-01,  1.4859e-01, -4.2209e-02, -8.9542e-02,
           3.1522e-01, -2.2788e-01, -2.8703e-02, -4.8760e-01, -4.9130e-01,
          -7.2047e-02, -2.3309e-01, -2.8799e-01,  2.1225e-02, -3.9233e-01,
           1.3725e-01]],

        [[ 2.8209e-01,  3.7416e-01,  2.1869e-01,  2.2563e-01,  3.8636e-01,
           3.7447e-01, -1.2585e-01,  2.2582e-01, -2.0385e-01,  2.4096e-02,
           4.5752e-01,  5.7423e-04, -3.3378e-01,  3.4628e-04, -2.4140e-01,
          -4.2125e-01]],

        [[ 2.8209e-01,  3.2839e-01,  3.5087e-01,  8.8238e-02,  1.3261e-01,
           5.2730e-01,  1.7252e-01,  1.4169e-01, -2.2895e-01, -1.4034e-01,
           2.5195e-01,  4.8483e-01, -1.1300e-01,  1.3027e-01, -4.3498e-01,
          -1.4093e-01]],

        [[ 2.8209e-01,  1.4422e-01,  4.2442e-01,  1.9441e-01,  1.2832e-01,
           2.8013e-01,  3.9855e-01,  3.7762e-01,  3.8895e-02,  6.7548e-02,
           2.9490e-01,  3.7406e-01,  2.5050e-01,  5.0425e-01,  8.9390e-02,
          -2.4193e-02]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 2.8209e-01,  4.2376e-01,  2.3831e-01,  4.8635e-02,  9.4318e-02,
           4.6217e-01, -9.0303e-02,  5.3042e-02, -4.0549e-01, -3.6972e-01,
           1.2171e-01,  7.5104e-02, -3.2954e-01,  8.6195e-03, -5.2327e-01,
          -1.3195e-01]],

        [[ 2.8209e-01,  4.0948e-01,  2.3616e-01, -1.2363e-01, -2.3168e-01,
           4.4256e-01, -9.4354e-02, -1.3362e-01, -3.4871e-01, -2.5234e-01,
          -2.9627e-01,  6.4373e-02, -3.3043e-01, -1.9435e-02, -4.4592e-01,
           3.0503e-01]],

        [[ 2.8209e-01,  4.6354e-01,  1.4859e-01, -4.2209e-02, -8.9542e-02,
           3.1522e-01, -2.2788e-01, -2.8703e-02, -4.8760e-01, -4.9130e-01,
          -7.2047e-02, -2.3309e-01, -2.8799e-01,  2.1225e-02, -3.9233e-01,
           1.3725e-01]],

        [[ 2.8209e-01,  3.7416e-01,  2.1869e-01,  2.2563e-01,  3.8636e-01,
           3.7447e-01, -1.2585e-01,  2.2582e-01, -2.0385e-01,  2.4096e-02,
           4.5752e-01,  5.7423e-04, -3.3378e-01,  3.4628e-04, -2.4140e-01,
          -4.2125e-01]],

        [[ 2.8209e-01,  3.2839e-01,  3.5087e-01,  8.8238e-02,  1.3261e-01,
           5.2730e-01,  1.7252e-01,  1.4169e-01, -2.2895e-01, -1.4034e-01,
           2.5195e-01,  4.8483e-01, -1.1300e-01,  1.3027e-01, -4.3498e-01,
          -1.4093e-01]],

        [[ 2.8209e-01,  1.4422e-01,  4.2442e-01,  1.9441e-01,  1.2832e-01,
           2.8013e-01,  3.9855e-01,  3.7762e-01,  3.8895e-02,  6.7548e-02,
           2.9490e-01,  3.7406e-01,  2.5050e-01,  5.0425e-01,  8.9390e-02,
          -2.4193e-02]]])
tensor([[[ 2.8209e-01,  4.4583e-01,  1.3093e-01,  1.5108e-01,  3.0825e-01,
           2.6714e-01, -2.4745e-01,  9.0525e-02, -4.0259e-01, -2.9383e-01,
           2.1854e-01, -2.6731e-01, -2.6409e-01, -9.0582e-02, -2.8543e-01,
          -4.3826e-01]],

        [[ 2.8209e-01,  4.1893e-01,  1.1291e-01, -2.2469e-01, -4.3077e-01,
           2.1648e-01, -2.6486e-01, -1.1610e-01, -2.8606e-01, -5.0961e-02,
          -2.6338e-01, -2.8723e-01, -2.3569e-01,  1.5405e-01, -1.7490e-01,
           5.4102e-01]],

        [[ 2.8209e-01,  3.5258e-01,  3.3642e-01, -3.5266e-02, -5.6903e-02,
           5.4283e-01,  1.3317e-01, -5.4296e-02, -2.8160e-01, -2.1505e-01,
          -1.0366e-01,  4.5197e-01, -1.6177e-01, -4.5208e-02, -5.1300e-01,
           6.6305e-02]],

        [[ 2.8209e-01, -1.0072e-03,  4.8793e-01, -2.5631e-02,  1.1815e-04,
          -2.2492e-03,  6.2818e-01, -5.7233e-02,  1.5009e-03, -1.0036e-05,
           3.1216e-04, -3.7558e-03,  7.4019e-01, -9.5571e-02,  3.9655e-03,
          -8.4778e-05]],

        [[ 2.8209e-01,  1.8615e-01,  2.7397e-01, -3.5919e-01, -3.0600e-01,
           2.3340e-01, -1.7900e-02, -4.5037e-01,  2.1594e-01,  3.3184e-01,
          -4.5396e-01,  9.9613e-02, -2.9879e-01, -1.9221e-01,  3.2035e-01,
          -4.5542e-02]],

        [[ 2.8209e-01,  2.6392e-01,  3.2502e-01,  2.5187e-01,  3.0421e-01,
           3.9257e-01,  1.0329e-01,  3.7465e-01, -1.4221e-02,  1.6109e-01,
           5.3541e-01,  2.9934e-01, -1.9549e-01,  2.8567e-01, -2.5029e-02,
          -1.8541e-01]]])
tensor([[[ 2.8209e-01,  4.4583e-01,  1.3093e-01,  1.5108e-01,  3.0825e-01,
           2.6714e-01, -2.4745e-01,  9.0525e-02, -4.0259e-01, -2.9383e-01,
           2.1854e-01, -2.6731e-01, -2.6409e-01, -9.0582e-02, -2.8543e-01,
          -4.3826e-01]],

        [[ 2.8209e-01,  4.1893e-01,  1.1291e-01, -2.2469e-01, -4.3077e-01,
           2.1648e-01, -2.6486e-01, -1.1610e-01, -2.8606e-01, -5.0961e-02,
          -2.6338e-01, -2.8723e-01, -2.3569e-01,  1.5405e-01, -1.7490e-01,
           5.4102e-01]],

        [[ 2.8209e-01,  3.5258e-01,  3.3642e-01, -3.5266e-02, -5.6903e-02,
           5.4283e-01,  1.3317e-01, -5.4296e-02, -2.8160e-01, -2.1505e-01,
          -1.0366e-01,  4.5197e-01, -1.6177e-01, -4.5208e-02, -5.1300e-01,
           6.6305e-02]],

        [[ 2.8209e-01, -1.0072e-03,  4.8793e-01, -2.5631e-02,  1.1815e-04,
          -2.2492e-03,  6.2818e-01, -5.7233e-02,  1.5009e-03, -1.0036e-05,
           3.1216e-04, -3.7558e-03,  7.4019e-01, -9.5571e-02,  3.9655e-03,
          -8.4778e-05]],

        [[ 2.8209e-01,  1.8615e-01,  2.7397e-01, -3.5919e-01, -3.0600e-01,
           2.3340e-01, -1.7900e-02, -4.5037e-01,  2.1594e-01,  3.3184e-01,
          -4.5396e-01,  9.9613e-02, -2.9879e-01, -1.9221e-01,  3.2035e-01,
          -4.5542e-02]],

        [[ 2.8209e-01,  2.6392e-01,  3.2502e-01,  2.5187e-01,  3.0421e-01,
           3.9257e-01,  1.0329e-01,  3.7465e-01, -1.4221e-02,  1.6109e-01,
           5.3541e-01,  2.9934e-01, -1.9549e-01,  2.8567e-01, -2.5029e-02,
          -1.8541e-01]]])
tensor([[[ 2.8209e-01,  4.2376e-01,  2.3831e-01,  4.8635e-02,  9.4318e-02,
           4.6217e-01, -9.0303e-02,  5.3042e-02, -4.0549e-01, -3.6972e-01,
           1.2171e-01,  7.5104e-02, -3.2954e-01,  8.6195e-03, -5.2327e-01,
          -1.3195e-01]],

        [[ 2.8209e-01,  4.0948e-01,  2.3616e-01, -1.2363e-01, -2.3168e-01,
           4.4256e-01, -9.4354e-02, -1.3362e-01, -3.4871e-01, -2.5234e-01,
          -2.9627e-01,  6.4373e-02, -3.3043e-01, -1.9435e-02, -4.4592e-01,
           3.0503e-01]],

        [[ 2.8209e-01,  4.6354e-01,  1.4859e-01, -4.2209e-02, -8.9542e-02,
           3.1522e-01, -2.2788e-01, -2.8703e-02, -4.8760e-01, -4.9130e-01,
          -7.2047e-02, -2.3309e-01, -2.8799e-01,  2.1225e-02, -3.9233e-01,
           1.3725e-01]],

        [[ 2.8209e-01,  3.7416e-01,  2.1869e-01,  2.2563e-01,  3.8636e-01,
           3.7447e-01, -1.2585e-01,  2.2582e-01, -2.0385e-01,  2.4096e-02,
           4.5752e-01,  5.7423e-04, -3.3378e-01,  3.4628e-04, -2.4140e-01,
          -4.2125e-01]],

        [[ 2.8209e-01,  3.2839e-01,  3.5087e-01,  8.8238e-02,  1.3261e-01,
           5.2730e-01,  1.7252e-01,  1.4169e-01, -2.2895e-01, -1.4034e-01,
           2.5195e-01,  4.8483e-01, -1.1300e-01,  1.3027e-01, -4.3498e-01,
          -1.4093e-01]],

        [[ 2.8209e-01,  1.4422e-01,  4.2442e-01,  1.9441e-01,  1.2832e-01,
           2.8013e-01,  3.9855e-01,  3.7762e-01,  3.8895e-02,  6.7548e-02,
           2.9490e-01,  3.7406e-01,  2.5050e-01,  5.0425e-01,  8.9390e-02,
          -2.4193e-02]]])
tensor([[[ 2.8209e-01,  4.4583e-01,  1.3093e-01,  1.5108e-01,  3.0825e-01,
           2.6714e-01, -2.4745e-01,  9.0525e-02, -4.0259e-01, -2.9383e-01,
           2.1854e-01, -2.6731e-01, -2.6409e-01, -9.0582e-02, -2.8543e-01,
          -4.3826e-01]],

        [[ 2.8209e-01,  4.1893e-01,  1.1291e-01, -2.2469e-01, -4.3077e-01,
           2.1648e-01, -2.6486e-01, -1.1610e-01, -2.8606e-01, -5.0961e-02,
          -2.6338e-01, -2.8723e-01, -2.3569e-01,  1.5405e-01, -1.7490e-01,
           5.4102e-01]],

        [[ 2.8209e-01,  3.5258e-01,  3.3642e-01, -3.5266e-02, -5.6903e-02,
           5.4283e-01,  1.3317e-01, -5.4296e-02, -2.8160e-01, -2.1505e-01,
          -1.0366e-01,  4.5197e-01, -1.6177e-01, -4.5208e-02, -5.1300e-01,
           6.6305e-02]],

        [[ 2.8209e-01, -1.0072e-03,  4.8793e-01, -2.5631e-02,  1.1815e-04,
          -2.2492e-03,  6.2818e-01, -5.7233e-02,  1.5009e-03, -1.0036e-05,
           3.1216e-04, -3.7558e-03,  7.4019e-01, -9.5571e-02,  3.9655e-03,
          -8.4778e-05]],

        [[ 2.8209e-01,  1.8615e-01,  2.7397e-01, -3.5919e-01, -3.0600e-01,
           2.3340e-01, -1.7900e-02, -4.5037e-01,  2.1594e-01,  3.3184e-01,
          -4.5396e-01,  9.9613e-02, -2.9879e-01, -1.9221e-01,  3.2035e-01,
          -4.5542e-02]],

        [[ 2.8209e-01,  2.6392e-01,  3.2502e-01,  2.5187e-01,  3.0421e-01,
           3.9257e-01,  1.0329e-01,  3.7465e-01, -1.4221e-02,  1.6109e-01,
           5.3541e-01,  2.9934e-01, -1.9549e-01,  2.8567e-01, -2.5029e-02,
          -1.8541e-01]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 2.8209e-01,  4.4583e-01,  1.3093e-01,  1.5108e-01,  3.0825e-01,
           2.6714e-01, -2.4745e-01,  9.0525e-02, -4.0259e-01, -2.9383e-01,
           2.1854e-01, -2.6731e-01, -2.6409e-01, -9.0582e-02, -2.8543e-01,
          -4.3826e-01]],

        [[ 2.8209e-01,  4.1893e-01,  1.1291e-01, -2.2469e-01, -4.3077e-01,
           2.1648e-01, -2.6486e-01, -1.1610e-01, -2.8606e-01, -5.0961e-02,
          -2.6338e-01, -2.8723e-01, -2.3569e-01,  1.5405e-01, -1.7490e-01,
           5.4102e-01]],

        [[ 2.8209e-01,  3.5258e-01,  3.3642e-01, -3.5266e-02, -5.6903e-02,
           5.4283e-01,  1.3317e-01, -5.4296e-02, -2.8160e-01, -2.1505e-01,
          -1.0366e-01,  4.5197e-01, -1.6177e-01, -4.5208e-02, -5.1300e-01,
           6.6305e-02]],

        [[ 2.8209e-01, -1.0072e-03,  4.8793e-01, -2.5631e-02,  1.1815e-04,
          -2.2492e-03,  6.2818e-01, -5.7233e-02,  1.5009e-03, -1.0036e-05,
           3.1216e-04, -3.7558e-03,  7.4019e-01, -9.5571e-02,  3.9655e-03,
          -8.4778e-05]],

        [[ 2.8209e-01,  1.8615e-01,  2.7397e-01, -3.5919e-01, -3.0600e-01,
           2.3340e-01, -1.7900e-02, -4.5037e-01,  2.1594e-01,  3.3184e-01,
          -4.5396e-01,  9.9613e-02, -2.9879e-01, -1.9221e-01,  3.2035e-01,
          -4.5542e-02]],

        [[ 2.8209e-01,  2.6392e-01,  3.2502e-01,  2.5187e-01,  3.0421e-01,
           3.9257e-01,  1.0329e-01,  3.7465e-01, -1.4221e-02,  1.6109e-01,
           5.3541e-01,  2.9934e-01, -1.9549e-01,  2.8567e-01, -2.5029e-02,
          -1.8541e-01]]])
tensor([[[ 2.8209e-01,  4.2376e-01,  2.3831e-01,  4.8635e-02,  9.4318e-02,
           4.6217e-01, -9.0303e-02,  5.3042e-02, -4.0549e-01, -3.6972e-01,
           1.2171e-01,  7.5104e-02, -3.2954e-01,  8.6195e-03, -5.2327e-01,
          -1.3195e-01]],

        [[ 2.8209e-01,  4.0948e-01,  2.3616e-01, -1.2363e-01, -2.3168e-01,
           4.4256e-01, -9.4354e-02, -1.3362e-01, -3.4871e-01, -2.5234e-01,
          -2.9627e-01,  6.4373e-02, -3.3043e-01, -1.9435e-02, -4.4592e-01,
           3.0503e-01]],

        [[ 2.8209e-01,  4.6354e-01,  1.4859e-01, -4.2209e-02, -8.9542e-02,
           3.1522e-01, -2.2788e-01, -2.8703e-02, -4.8760e-01, -4.9130e-01,
          -7.2047e-02, -2.3309e-01, -2.8799e-01,  2.1225e-02, -3.9233e-01,
           1.3725e-01]],

        [[ 2.8209e-01,  3.7416e-01,  2.1869e-01,  2.2563e-01,  3.8636e-01,
           3.7447e-01, -1.2585e-01,  2.2582e-01, -2.0385e-01,  2.4096e-02,
           4.5752e-01,  5.7423e-04, -3.3378e-01,  3.4628e-04, -2.4140e-01,
          -4.2125e-01]],

        [[ 2.8209e-01,  3.2839e-01,  3.5087e-01,  8.8238e-02,  1.3261e-01,
           5.2730e-01,  1.7252e-01,  1.4169e-01, -2.2895e-01, -1.4034e-01,
           2.5195e-01,  4.8483e-01, -1.1300e-01,  1.3027e-01, -4.3498e-01,
          -1.4093e-01]],

        [[ 2.8209e-01,  1.4422e-01,  4.2442e-01,  1.9441e-01,  1.2832e-01,
           2.8013e-01,  3.9855e-01,  3.7762e-01,  3.8895e-02,  6.7548e-02,
           2.9490e-01,  3.7406e-01,  2.5050e-01,  5.0425e-01,  8.9390e-02,
          -2.4193e-02]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 2.8209e-01,  4.4583e-01,  1.3093e-01,  1.5108e-01,  3.0825e-01,
           2.6714e-01, -2.4745e-01,  9.0525e-02, -4.0259e-01, -2.9383e-01,
           2.1854e-01, -2.6731e-01, -2.6409e-01, -9.0582e-02, -2.8543e-01,
          -4.3826e-01]],

        [[ 2.8209e-01,  4.1893e-01,  1.1291e-01, -2.2469e-01, -4.3077e-01,
           2.1648e-01, -2.6486e-01, -1.1610e-01, -2.8606e-01, -5.0961e-02,
          -2.6338e-01, -2.8723e-01, -2.3569e-01,  1.5405e-01, -1.7490e-01,
           5.4102e-01]],

        [[ 2.8209e-01,  3.5258e-01,  3.3642e-01, -3.5266e-02, -5.6903e-02,
           5.4283e-01,  1.3317e-01, -5.4296e-02, -2.8160e-01, -2.1505e-01,
          -1.0366e-01,  4.5197e-01, -1.6177e-01, -4.5208e-02, -5.1300e-01,
           6.6305e-02]],

        [[ 2.8209e-01, -1.0072e-03,  4.8793e-01, -2.5631e-02,  1.1815e-04,
          -2.2492e-03,  6.2818e-01, -5.7233e-02,  1.5009e-03, -1.0036e-05,
           3.1216e-04, -3.7558e-03,  7.4019e-01, -9.5571e-02,  3.9655e-03,
          -8.4778e-05]],

        [[ 2.8209e-01,  1.8615e-01,  2.7397e-01, -3.5919e-01, -3.0600e-01,
           2.3340e-01, -1.7900e-02, -4.5037e-01,  2.1594e-01,  3.3184e-01,
          -4.5396e-01,  9.9613e-02, -2.9879e-01, -1.9221e-01,  3.2035e-01,
          -4.5542e-02]],

        [[ 2.8209e-01,  2.6392e-01,  3.2502e-01,  2.5187e-01,  3.0421e-01,
           3.9257e-01,  1.0329e-01,  3.7465e-01, -1.4221e-02,  1.6109e-01,
           5.3541e-01,  2.9934e-01, -1.9549e-01,  2.8567e-01, -2.5029e-02,
          -1.8541e-01]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 2.8209e-01,  4.4583e-01,  1.3093e-01,  1.5108e-01,  3.0825e-01,
           2.6714e-01, -2.4745e-01,  9.0525e-02, -4.0259e-01, -2.9383e-01,
           2.1854e-01, -2.6731e-01, -2.6409e-01, -9.0582e-02, -2.8543e-01,
          -4.3826e-01]],

        [[ 2.8209e-01,  4.1893e-01,  1.1291e-01, -2.2469e-01, -4.3077e-01,
           2.1648e-01, -2.6486e-01, -1.1610e-01, -2.8606e-01, -5.0961e-02,
          -2.6338e-01, -2.8723e-01, -2.3569e-01,  1.5405e-01, -1.7490e-01,
           5.4102e-01]],

        [[ 2.8209e-01,  3.5258e-01,  3.3642e-01, -3.5266e-02, -5.6903e-02,
           5.4283e-01,  1.3317e-01, -5.4296e-02, -2.8160e-01, -2.1505e-01,
          -1.0366e-01,  4.5197e-01, -1.6177e-01, -4.5208e-02, -5.1300e-01,
           6.6305e-02]],

        [[ 2.8209e-01, -1.0072e-03,  4.8793e-01, -2.5631e-02,  1.1815e-04,
          -2.2492e-03,  6.2818e-01, -5.7233e-02,  1.5009e-03, -1.0036e-05,
           3.1216e-04, -3.7558e-03,  7.4019e-01, -9.5571e-02,  3.9655e-03,
          -8.4778e-05]],

        [[ 2.8209e-01,  1.8615e-01,  2.7397e-01, -3.5919e-01, -3.0600e-01,
           2.3340e-01, -1.7900e-02, -4.5037e-01,  2.1594e-01,  3.3184e-01,
          -4.5396e-01,  9.9613e-02, -2.9879e-01, -1.9221e-01,  3.2035e-01,
          -4.5542e-02]],

        [[ 2.8209e-01,  2.6392e-01,  3.2502e-01,  2.5187e-01,  3.0421e-01,
           3.9257e-01,  1.0329e-01,  3.7465e-01, -1.4221e-02,  1.6109e-01,
           5.3541e-01,  2.9934e-01, -1.9549e-01,  2.8567e-01, -2.5029e-02,
          -1.8541e-01]]])
tensor([[[ 2.8209e-01,  4.2376e-01,  2.3831e-01,  4.8635e-02,  9.4318e-02,
           4.6217e-01, -9.0303e-02,  5.3042e-02, -4.0549e-01, -3.6972e-01,
           1.2171e-01,  7.5104e-02, -3.2954e-01,  8.6195e-03, -5.2327e-01,
          -1.3195e-01]],

        [[ 2.8209e-01,  4.0948e-01,  2.3616e-01, -1.2363e-01, -2.3168e-01,
           4.4256e-01, -9.4354e-02, -1.3362e-01, -3.4871e-01, -2.5234e-01,
          -2.9627e-01,  6.4373e-02, -3.3043e-01, -1.9435e-02, -4.4592e-01,
           3.0503e-01]],

        [[ 2.8209e-01,  4.6354e-01,  1.4859e-01, -4.2209e-02, -8.9542e-02,
           3.1522e-01, -2.2788e-01, -2.8703e-02, -4.8760e-01, -4.9130e-01,
          -7.2047e-02, -2.3309e-01, -2.8799e-01,  2.1225e-02, -3.9233e-01,
           1.3725e-01]],

        [[ 2.8209e-01,  3.7416e-01,  2.1869e-01,  2.2563e-01,  3.8636e-01,
           3.7447e-01, -1.2585e-01,  2.2582e-01, -2.0385e-01,  2.4096e-02,
           4.5752e-01,  5.7423e-04, -3.3378e-01,  3.4628e-04, -2.4140e-01,
          -4.2125e-01]],

        [[ 2.8209e-01,  3.2839e-01,  3.5087e-01,  8.8238e-02,  1.3261e-01,
           5.2730e-01,  1.7252e-01,  1.4169e-01, -2.2895e-01, -1.4034e-01,
           2.5195e-01,  4.8483e-01, -1.1300e-01,  1.3027e-01, -4.3498e-01,
          -1.4093e-01]],

        [[ 2.8209e-01,  1.4422e-01,  4.2442e-01,  1.9441e-01,  1.2832e-01,
           2.8013e-01,  3.9855e-01,  3.7762e-01,  3.8895e-02,  6.7548e-02,
           2.9490e-01,  3.7406e-01,  2.5050e-01,  5.0425e-01,  8.9390e-02,
          -2.4193e-02]]])
tensor([[[ 2.8209e-01,  4.4583e-01,  1.3093e-01,  1.5108e-01,  3.0825e-01,
           2.6714e-01, -2.4745e-01,  9.0525e-02, -4.0259e-01, -2.9383e-01,
           2.1854e-01, -2.6731e-01, -2.6409e-01, -9.0582e-02, -2.8543e-01,
          -4.3826e-01]],

        [[ 2.8209e-01,  4.1893e-01,  1.1291e-01, -2.2469e-01, -4.3077e-01,
           2.1648e-01, -2.6486e-01, -1.1610e-01, -2.8606e-01, -5.0961e-02,
          -2.6338e-01, -2.8723e-01, -2.3569e-01,  1.5405e-01, -1.7490e-01,
           5.4102e-01]],

        [[ 2.8209e-01,  3.5258e-01,  3.3642e-01, -3.5266e-02, -5.6903e-02,
           5.4283e-01,  1.3317e-01, -5.4296e-02, -2.8160e-01, -2.1505e-01,
          -1.0366e-01,  4.5197e-01, -1.6177e-01, -4.5208e-02, -5.1300e-01,
           6.6305e-02]],

        [[ 2.8209e-01, -1.0072e-03,  4.8793e-01, -2.5631e-02,  1.1815e-04,
          -2.2492e-03,  6.2818e-01, -5.7233e-02,  1.5009e-03, -1.0036e-05,
           3.1216e-04, -3.7558e-03,  7.4019e-01, -9.5571e-02,  3.9655e-03,
          -8.4778e-05]],

        [[ 2.8209e-01,  1.8615e-01,  2.7397e-01, -3.5919e-01, -3.0600e-01,
           2.3340e-01, -1.7900e-02, -4.5037e-01,  2.1594e-01,  3.3184e-01,
          -4.5396e-01,  9.9613e-02, -2.9879e-01, -1.9221e-01,  3.2035e-01,
          -4.5542e-02]],

        [[ 2.8209e-01,  2.6392e-01,  3.2502e-01,  2.5187e-01,  3.0421e-01,
           3.9257e-01,  1.0329e-01,  3.7465e-01, -1.4221e-02,  1.6109e-01,
           5.3541e-01,  2.9934e-01, -1.9549e-01,  2.8567e-01, -2.5029e-02,
          -1.8541e-01]]])
tensor([[[ 2.8209e-01,  4.4583e-01,  1.3093e-01,  1.5108e-01,  3.0825e-01,
           2.6714e-01, -2.4745e-01,  9.0525e-02, -4.0259e-01, -2.9383e-01,
           2.1854e-01, -2.6731e-01, -2.6409e-01, -9.0582e-02, -2.8543e-01,
          -4.3826e-01]],

        [[ 2.8209e-01,  4.1893e-01,  1.1291e-01, -2.2469e-01, -4.3077e-01,
           2.1648e-01, -2.6486e-01, -1.1610e-01, -2.8606e-01, -5.0961e-02,
          -2.6338e-01, -2.8723e-01, -2.3569e-01,  1.5405e-01, -1.7490e-01,
           5.4102e-01]],

        [[ 2.8209e-01,  3.5258e-01,  3.3642e-01, -3.5266e-02, -5.6903e-02,
           5.4283e-01,  1.3317e-01, -5.4296e-02, -2.8160e-01, -2.1505e-01,
          -1.0366e-01,  4.5197e-01, -1.6177e-01, -4.5208e-02, -5.1300e-01,
           6.6305e-02]],

        [[ 2.8209e-01, -1.0072e-03,  4.8793e-01, -2.5631e-02,  1.1815e-04,
          -2.2492e-03,  6.2818e-01, -5.7233e-02,  1.5009e-03, -1.0036e-05,
           3.1216e-04, -3.7558e-03,  7.4019e-01, -9.5571e-02,  3.9655e-03,
          -8.4778e-05]],

        [[ 2.8209e-01,  1.8615e-01,  2.7397e-01, -3.5919e-01, -3.0600e-01,
           2.3340e-01, -1.7900e-02, -4.5037e-01,  2.1594e-01,  3.3184e-01,
          -4.5396e-01,  9.9613e-02, -2.9879e-01, -1.9221e-01,  3.2035e-01,
          -4.5542e-02]],

        [[ 2.8209e-01,  2.6392e-01,  3.2502e-01,  2.5187e-01,  3.0421e-01,
           3.9257e-01,  1.0329e-01,  3.7465e-01, -1.4221e-02,  1.6109e-01,
           5.3541e-01,  2.9934e-01, -1.9549e-01,  2.8567e-01, -2.5029e-02,
          -1.8541e-01]]])
tensor([[[ 2.8209e-01,  4.4583e-01,  1.3093e-01,  1.5108e-01,  3.0825e-01,
           2.6714e-01, -2.4745e-01,  9.0525e-02, -4.0259e-01, -2.9383e-01,
           2.1854e-01, -2.6731e-01, -2.6409e-01, -9.0582e-02, -2.8543e-01,
          -4.3826e-01]],

        [[ 2.8209e-01,  4.1893e-01,  1.1291e-01, -2.2469e-01, -4.3077e-01,
           2.1648e-01, -2.6486e-01, -1.1610e-01, -2.8606e-01, -5.0961e-02,
          -2.6338e-01, -2.8723e-01, -2.3569e-01,  1.5405e-01, -1.7490e-01,
           5.4102e-01]],

        [[ 2.8209e-01,  3.5258e-01,  3.3642e-01, -3.5266e-02, -5.6903e-02,
           5.4283e-01,  1.3317e-01, -5.4296e-02, -2.8160e-01, -2.1505e-01,
          -1.0366e-01,  4.5197e-01, -1.6177e-01, -4.5208e-02, -5.1300e-01,
           6.6305e-02]],

        [[ 2.8209e-01, -1.0072e-03,  4.8793e-01, -2.5631e-02,  1.1815e-04,
          -2.2492e-03,  6.2818e-01, -5.7233e-02,  1.5009e-03, -1.0036e-05,
           3.1216e-04, -3.7558e-03,  7.4019e-01, -9.5571e-02,  3.9655e-03,
          -8.4778e-05]],

        [[ 2.8209e-01,  1.8615e-01,  2.7397e-01, -3.5919e-01, -3.0600e-01,
           2.3340e-01, -1.7900e-02, -4.5037e-01,  2.1594e-01,  3.3184e-01,
          -4.5396e-01,  9.9613e-02, -2.9879e-01, -1.9221e-01,  3.2035e-01,
          -4.5542e-02]],

        [[ 2.8209e-01,  2.6392e-01,  3.2502e-01,  2.5187e-01,  3.0421e-01,
           3.9257e-01,  1.0329e-01,  3.7465e-01, -1.4221e-02,  1.6109e-01,
           5.3541e-01,  2.9934e-01, -1.9549e-01,  2.8567e-01, -2.5029e-02,
          -1.8541e-01]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 2.8209e-01,  4.4583e-01,  1.3093e-01,  1.5108e-01,  3.0825e-01,
           2.6714e-01, -2.4745e-01,  9.0525e-02, -4.0259e-01, -2.9383e-01,
           2.1854e-01, -2.6731e-01, -2.6409e-01, -9.0582e-02, -2.8543e-01,
          -4.3826e-01]],

        [[ 2.8209e-01,  4.1893e-01,  1.1291e-01, -2.2469e-01, -4.3077e-01,
           2.1648e-01, -2.6486e-01, -1.1610e-01, -2.8606e-01, -5.0961e-02,
          -2.6338e-01, -2.8723e-01, -2.3569e-01,  1.5405e-01, -1.7490e-01,
           5.4102e-01]],

        [[ 2.8209e-01,  3.5258e-01,  3.3642e-01, -3.5266e-02, -5.6903e-02,
           5.4283e-01,  1.3317e-01, -5.4296e-02, -2.8160e-01, -2.1505e-01,
          -1.0366e-01,  4.5197e-01, -1.6177e-01, -4.5208e-02, -5.1300e-01,
           6.6305e-02]],

        [[ 2.8209e-01, -1.0072e-03,  4.8793e-01, -2.5631e-02,  1.1815e-04,
          -2.2492e-03,  6.2818e-01, -5.7233e-02,  1.5009e-03, -1.0036e-05,
           3.1216e-04, -3.7558e-03,  7.4019e-01, -9.5571e-02,  3.9655e-03,
          -8.4778e-05]],

        [[ 2.8209e-01,  1.8615e-01,  2.7397e-01, -3.5919e-01, -3.0600e-01,
           2.3340e-01, -1.7900e-02, -4.5037e-01,  2.1594e-01,  3.3184e-01,
          -4.5396e-01,  9.9613e-02, -2.9879e-01, -1.9221e-01,  3.2035e-01,
          -4.5542e-02]],

        [[ 2.8209e-01,  2.6392e-01,  3.2502e-01,  2.5187e-01,  3.0421e-01,
           3.9257e-01,  1.0329e-01,  3.7465e-01, -1.4221e-02,  1.6109e-01,
           5.3541e-01,  2.9934e-01, -1.9549e-01,  2.8567e-01, -2.5029e-02,
          -1.8541e-01]]])
tensor([[[ 2.8209e-01,  4.4583e-01,  1.3093e-01,  1.5108e-01,  3.0825e-01,
           2.6714e-01, -2.4745e-01,  9.0525e-02, -4.0259e-01, -2.9383e-01,
           2.1854e-01, -2.6731e-01, -2.6409e-01, -9.0582e-02, -2.8543e-01,
          -4.3826e-01]],

        [[ 2.8209e-01,  4.1893e-01,  1.1291e-01, -2.2469e-01, -4.3077e-01,
           2.1648e-01, -2.6486e-01, -1.1610e-01, -2.8606e-01, -5.0961e-02,
          -2.6338e-01, -2.8723e-01, -2.3569e-01,  1.5405e-01, -1.7490e-01,
           5.4102e-01]],

        [[ 2.8209e-01,  3.5258e-01,  3.3642e-01, -3.5266e-02, -5.6903e-02,
           5.4283e-01,  1.3317e-01, -5.4296e-02, -2.8160e-01, -2.1505e-01,
          -1.0366e-01,  4.5197e-01, -1.6177e-01, -4.5208e-02, -5.1300e-01,
           6.6305e-02]],

        [[ 2.8209e-01, -1.0072e-03,  4.8793e-01, -2.5631e-02,  1.1815e-04,
          -2.2492e-03,  6.2818e-01, -5.7233e-02,  1.5009e-03, -1.0036e-05,
           3.1216e-04, -3.7558e-03,  7.4019e-01, -9.5571e-02,  3.9655e-03,
          -8.4778e-05]],

        [[ 2.8209e-01,  1.8615e-01,  2.7397e-01, -3.5919e-01, -3.0600e-01,
           2.3340e-01, -1.7900e-02, -4.5037e-01,  2.1594e-01,  3.3184e-01,
          -4.5396e-01,  9.9613e-02, -2.9879e-01, -1.9221e-01,  3.2035e-01,
          -4.5542e-02]],

        [[ 2.8209e-01,  2.6392e-01,  3.2502e-01,  2.5187e-01,  3.0421e-01,
           3.9257e-01,  1.0329e-01,  3.7465e-01, -1.4221e-02,  1.6109e-01,
           5.3541e-01,  2.9934e-01, -1.9549e-01,  2.8567e-01, -2.5029e-02,
          -1.8541e-01]]])
tensor([[[ 2.8209e-01,  4.2376e-01,  2.3831e-01,  4.8635e-02,  9.4318e-02,
           4.6217e-01, -9.0303e-02,  5.3042e-02, -4.0549e-01, -3.6972e-01,
           1.2171e-01,  7.5104e-02, -3.2954e-01,  8.6195e-03, -5.2327e-01,
          -1.3195e-01]],

        [[ 2.8209e-01,  4.0948e-01,  2.3616e-01, -1.2363e-01, -2.3168e-01,
           4.4256e-01, -9.4354e-02, -1.3362e-01, -3.4871e-01, -2.5234e-01,
          -2.9627e-01,  6.4373e-02, -3.3043e-01, -1.9435e-02, -4.4592e-01,
           3.0503e-01]],

        [[ 2.8209e-01,  4.6354e-01,  1.4859e-01, -4.2209e-02, -8.9542e-02,
           3.1522e-01, -2.2788e-01, -2.8703e-02, -4.8760e-01, -4.9130e-01,
          -7.2047e-02, -2.3309e-01, -2.8799e-01,  2.1225e-02, -3.9233e-01,
           1.3725e-01]],

        [[ 2.8209e-01,  3.7416e-01,  2.1869e-01,  2.2563e-01,  3.8636e-01,
           3.7447e-01, -1.2585e-01,  2.2582e-01, -2.0385e-01,  2.4096e-02,
           4.5752e-01,  5.7423e-04, -3.3378e-01,  3.4628e-04, -2.4140e-01,
          -4.2125e-01]],

        [[ 2.8209e-01,  3.2839e-01,  3.5087e-01,  8.8238e-02,  1.3261e-01,
           5.2730e-01,  1.7252e-01,  1.4169e-01, -2.2895e-01, -1.4034e-01,
           2.5195e-01,  4.8483e-01, -1.1300e-01,  1.3027e-01, -4.3498e-01,
          -1.4093e-01]],

        [[ 2.8209e-01,  1.4422e-01,  4.2442e-01,  1.9441e-01,  1.2832e-01,
           2.8013e-01,  3.9855e-01,  3.7762e-01,  3.8895e-02,  6.7548e-02,
           2.9490e-01,  3.7406e-01,  2.5050e-01,  5.0425e-01,  8.9390e-02,
          -2.4193e-02]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 2.8209e-01,  4.2376e-01,  2.3831e-01,  4.8635e-02,  9.4318e-02,
           4.6217e-01, -9.0303e-02,  5.3042e-02, -4.0549e-01, -3.6972e-01,
           1.2171e-01,  7.5104e-02, -3.2954e-01,  8.6195e-03, -5.2327e-01,
          -1.3195e-01]],

        [[ 2.8209e-01,  4.0948e-01,  2.3616e-01, -1.2363e-01, -2.3168e-01,
           4.4256e-01, -9.4354e-02, -1.3362e-01, -3.4871e-01, -2.5234e-01,
          -2.9627e-01,  6.4373e-02, -3.3043e-01, -1.9435e-02, -4.4592e-01,
           3.0503e-01]],

        [[ 2.8209e-01,  4.6354e-01,  1.4859e-01, -4.2209e-02, -8.9542e-02,
           3.1522e-01, -2.2788e-01, -2.8703e-02, -4.8760e-01, -4.9130e-01,
          -7.2047e-02, -2.3309e-01, -2.8799e-01,  2.1225e-02, -3.9233e-01,
           1.3725e-01]],

        [[ 2.8209e-01,  3.7416e-01,  2.1869e-01,  2.2563e-01,  3.8636e-01,
           3.7447e-01, -1.2585e-01,  2.2582e-01, -2.0385e-01,  2.4096e-02,
           4.5752e-01,  5.7423e-04, -3.3378e-01,  3.4628e-04, -2.4140e-01,
          -4.2125e-01]],

        [[ 2.8209e-01,  3.2839e-01,  3.5087e-01,  8.8238e-02,  1.3261e-01,
           5.2730e-01,  1.7252e-01,  1.4169e-01, -2.2895e-01, -1.4034e-01,
           2.5195e-01,  4.8483e-01, -1.1300e-01,  1.3027e-01, -4.3498e-01,
          -1.4093e-01]],

        [[ 2.8209e-01,  1.4422e-01,  4.2442e-01,  1.9441e-01,  1.2832e-01,
           2.8013e-01,  3.9855e-01,  3.7762e-01,  3.8895e-02,  6.7548e-02,
           2.9490e-01,  3.7406e-01,  2.5050e-01,  5.0425e-01,  8.9390e-02,
          -2.4193e-02]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 2.8209e-01,  4.2376e-01,  2.3831e-01,  4.8635e-02,  9.4318e-02,
           4.6217e-01, -9.0303e-02,  5.3042e-02, -4.0549e-01, -3.6972e-01,
           1.2171e-01,  7.5104e-02, -3.2954e-01,  8.6195e-03, -5.2327e-01,
          -1.3195e-01]],

        [[ 2.8209e-01,  4.0948e-01,  2.3616e-01, -1.2363e-01, -2.3168e-01,
           4.4256e-01, -9.4354e-02, -1.3362e-01, -3.4871e-01, -2.5234e-01,
          -2.9627e-01,  6.4373e-02, -3.3043e-01, -1.9435e-02, -4.4592e-01,
           3.0503e-01]],

        [[ 2.8209e-01,  4.6354e-01,  1.4859e-01, -4.2209e-02, -8.9542e-02,
           3.1522e-01, -2.2788e-01, -2.8703e-02, -4.8760e-01, -4.9130e-01,
          -7.2047e-02, -2.3309e-01, -2.8799e-01,  2.1225e-02, -3.9233e-01,
           1.3725e-01]],

        [[ 2.8209e-01,  3.7416e-01,  2.1869e-01,  2.2563e-01,  3.8636e-01,
           3.7447e-01, -1.2585e-01,  2.2582e-01, -2.0385e-01,  2.4096e-02,
           4.5752e-01,  5.7423e-04, -3.3378e-01,  3.4628e-04, -2.4140e-01,
          -4.2125e-01]],

        [[ 2.8209e-01,  3.2839e-01,  3.5087e-01,  8.8238e-02,  1.3261e-01,
           5.2730e-01,  1.7252e-01,  1.4169e-01, -2.2895e-01, -1.4034e-01,
           2.5195e-01,  4.8483e-01, -1.1300e-01,  1.3027e-01, -4.3498e-01,
          -1.4093e-01]],

        [[ 2.8209e-01,  1.4422e-01,  4.2442e-01,  1.9441e-01,  1.2832e-01,
           2.8013e-01,  3.9855e-01,  3.7762e-01,  3.8895e-02,  6.7548e-02,
           2.9490e-01,  3.7406e-01,  2.5050e-01,  5.0425e-01,  8.9390e-02,
          -2.4193e-02]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 2.8209e-01,  4.4583e-01,  1.3093e-01,  1.5108e-01,  3.0825e-01,
           2.6714e-01, -2.4745e-01,  9.0525e-02, -4.0259e-01, -2.9383e-01,
           2.1854e-01, -2.6731e-01, -2.6409e-01, -9.0582e-02, -2.8543e-01,
          -4.3826e-01]],

        [[ 2.8209e-01,  4.1893e-01,  1.1291e-01, -2.2469e-01, -4.3077e-01,
           2.1648e-01, -2.6486e-01, -1.1610e-01, -2.8606e-01, -5.0961e-02,
          -2.6338e-01, -2.8723e-01, -2.3569e-01,  1.5405e-01, -1.7490e-01,
           5.4102e-01]],

        [[ 2.8209e-01,  3.5258e-01,  3.3642e-01, -3.5266e-02, -5.6903e-02,
           5.4283e-01,  1.3317e-01, -5.4296e-02, -2.8160e-01, -2.1505e-01,
          -1.0366e-01,  4.5197e-01, -1.6177e-01, -4.5208e-02, -5.1300e-01,
           6.6305e-02]],

        [[ 2.8209e-01, -1.0072e-03,  4.8793e-01, -2.5631e-02,  1.1815e-04,
          -2.2492e-03,  6.2818e-01, -5.7233e-02,  1.5009e-03, -1.0036e-05,
           3.1216e-04, -3.7558e-03,  7.4019e-01, -9.5571e-02,  3.9655e-03,
          -8.4778e-05]],

        [[ 2.8209e-01,  1.8615e-01,  2.7397e-01, -3.5919e-01, -3.0600e-01,
           2.3340e-01, -1.7900e-02, -4.5037e-01,  2.1594e-01,  3.3184e-01,
          -4.5396e-01,  9.9613e-02, -2.9879e-01, -1.9221e-01,  3.2035e-01,
          -4.5542e-02]],

        [[ 2.8209e-01,  2.6392e-01,  3.2502e-01,  2.5187e-01,  3.0421e-01,
           3.9257e-01,  1.0329e-01,  3.7465e-01, -1.4221e-02,  1.6109e-01,
           5.3541e-01,  2.9934e-01, -1.9549e-01,  2.8567e-01, -2.5029e-02,
          -1.8541e-01]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 2.8209e-01,  4.2376e-01,  2.3831e-01,  4.8635e-02,  9.4318e-02,
           4.6217e-01, -9.0303e-02,  5.3042e-02, -4.0549e-01, -3.6972e-01,
           1.2171e-01,  7.5104e-02, -3.2954e-01,  8.6195e-03, -5.2327e-01,
          -1.3195e-01]],

        [[ 2.8209e-01,  4.0948e-01,  2.3616e-01, -1.2363e-01, -2.3168e-01,
           4.4256e-01, -9.4354e-02, -1.3362e-01, -3.4871e-01, -2.5234e-01,
          -2.9627e-01,  6.4373e-02, -3.3043e-01, -1.9435e-02, -4.4592e-01,
           3.0503e-01]],

        [[ 2.8209e-01,  4.6354e-01,  1.4859e-01, -4.2209e-02, -8.9542e-02,
           3.1522e-01, -2.2788e-01, -2.8703e-02, -4.8760e-01, -4.9130e-01,
          -7.2047e-02, -2.3309e-01, -2.8799e-01,  2.1225e-02, -3.9233e-01,
           1.3725e-01]],

        [[ 2.8209e-01,  3.7416e-01,  2.1869e-01,  2.2563e-01,  3.8636e-01,
           3.7447e-01, -1.2585e-01,  2.2582e-01, -2.0385e-01,  2.4096e-02,
           4.5752e-01,  5.7423e-04, -3.3378e-01,  3.4628e-04, -2.4140e-01,
          -4.2125e-01]],

        [[ 2.8209e-01,  3.2839e-01,  3.5087e-01,  8.8238e-02,  1.3261e-01,
           5.2730e-01,  1.7252e-01,  1.4169e-01, -2.2895e-01, -1.4034e-01,
           2.5195e-01,  4.8483e-01, -1.1300e-01,  1.3027e-01, -4.3498e-01,
          -1.4093e-01]],

        [[ 2.8209e-01,  1.4422e-01,  4.2442e-01,  1.9441e-01,  1.2832e-01,
           2.8013e-01,  3.9855e-01,  3.7762e-01,  3.8895e-02,  6.7548e-02,
           2.9490e-01,  3.7406e-01,  2.5050e-01,  5.0425e-01,  8.9390e-02,
          -2.4193e-02]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 2.8209e-01,  4.4583e-01,  1.3093e-01,  1.5108e-01,  3.0825e-01,
           2.6714e-01, -2.4745e-01,  9.0525e-02, -4.0259e-01, -2.9383e-01,
           2.1854e-01, -2.6731e-01, -2.6409e-01, -9.0582e-02, -2.8543e-01,
          -4.3826e-01]],

        [[ 2.8209e-01,  4.1893e-01,  1.1291e-01, -2.2469e-01, -4.3077e-01,
           2.1648e-01, -2.6486e-01, -1.1610e-01, -2.8606e-01, -5.0961e-02,
          -2.6338e-01, -2.8723e-01, -2.3569e-01,  1.5405e-01, -1.7490e-01,
           5.4102e-01]],

        [[ 2.8209e-01,  3.5258e-01,  3.3642e-01, -3.5266e-02, -5.6903e-02,
           5.4283e-01,  1.3317e-01, -5.4296e-02, -2.8160e-01, -2.1505e-01,
          -1.0366e-01,  4.5197e-01, -1.6177e-01, -4.5208e-02, -5.1300e-01,
           6.6305e-02]],

        [[ 2.8209e-01, -1.0072e-03,  4.8793e-01, -2.5631e-02,  1.1815e-04,
          -2.2492e-03,  6.2818e-01, -5.7233e-02,  1.5009e-03, -1.0036e-05,
           3.1216e-04, -3.7558e-03,  7.4019e-01, -9.5571e-02,  3.9655e-03,
          -8.4778e-05]],

        [[ 2.8209e-01,  1.8615e-01,  2.7397e-01, -3.5919e-01, -3.0600e-01,
           2.3340e-01, -1.7900e-02, -4.5037e-01,  2.1594e-01,  3.3184e-01,
          -4.5396e-01,  9.9613e-02, -2.9879e-01, -1.9221e-01,  3.2035e-01,
          -4.5542e-02]],

        [[ 2.8209e-01,  2.6392e-01,  3.2502e-01,  2.5187e-01,  3.0421e-01,
           3.9257e-01,  1.0329e-01,  3.7465e-01, -1.4221e-02,  1.6109e-01,
           5.3541e-01,  2.9934e-01, -1.9549e-01,  2.8567e-01, -2.5029e-02,
          -1.8541e-01]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 2.8209e-01,  4.4583e-01,  1.3093e-01,  1.5108e-01,  3.0825e-01,
           2.6714e-01, -2.4745e-01,  9.0525e-02, -4.0259e-01, -2.9383e-01,
           2.1854e-01, -2.6731e-01, -2.6409e-01, -9.0582e-02, -2.8543e-01,
          -4.3826e-01]],

        [[ 2.8209e-01,  4.1893e-01,  1.1291e-01, -2.2469e-01, -4.3077e-01,
           2.1648e-01, -2.6486e-01, -1.1610e-01, -2.8606e-01, -5.0961e-02,
          -2.6338e-01, -2.8723e-01, -2.3569e-01,  1.5405e-01, -1.7490e-01,
           5.4102e-01]],

        [[ 2.8209e-01,  3.5258e-01,  3.3642e-01, -3.5266e-02, -5.6903e-02,
           5.4283e-01,  1.3317e-01, -5.4296e-02, -2.8160e-01, -2.1505e-01,
          -1.0366e-01,  4.5197e-01, -1.6177e-01, -4.5208e-02, -5.1300e-01,
           6.6305e-02]],

        [[ 2.8209e-01, -1.0072e-03,  4.8793e-01, -2.5631e-02,  1.1815e-04,
          -2.2492e-03,  6.2818e-01, -5.7233e-02,  1.5009e-03, -1.0036e-05,
           3.1216e-04, -3.7558e-03,  7.4019e-01, -9.5571e-02,  3.9655e-03,
          -8.4778e-05]],

        [[ 2.8209e-01,  1.8615e-01,  2.7397e-01, -3.5919e-01, -3.0600e-01,
           2.3340e-01, -1.7900e-02, -4.5037e-01,  2.1594e-01,  3.3184e-01,
          -4.5396e-01,  9.9613e-02, -2.9879e-01, -1.9221e-01,  3.2035e-01,
          -4.5542e-02]],

        [[ 2.8209e-01,  2.6392e-01,  3.2502e-01,  2.5187e-01,  3.0421e-01,
           3.9257e-01,  1.0329e-01,  3.7465e-01, -1.4221e-02,  1.6109e-01,
           5.3541e-01,  2.9934e-01, -1.9549e-01,  2.8567e-01, -2.5029e-02,
          -1.8541e-01]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 2.8209e-01,  4.2376e-01,  2.3831e-01,  4.8635e-02,  9.4318e-02,
           4.6217e-01, -9.0303e-02,  5.3042e-02, -4.0549e-01, -3.6972e-01,
           1.2171e-01,  7.5104e-02, -3.2954e-01,  8.6195e-03, -5.2327e-01,
          -1.3195e-01]],

        [[ 2.8209e-01,  4.0948e-01,  2.3616e-01, -1.2363e-01, -2.3168e-01,
           4.4256e-01, -9.4354e-02, -1.3362e-01, -3.4871e-01, -2.5234e-01,
          -2.9627e-01,  6.4373e-02, -3.3043e-01, -1.9435e-02, -4.4592e-01,
           3.0503e-01]],

        [[ 2.8209e-01,  4.6354e-01,  1.4859e-01, -4.2209e-02, -8.9542e-02,
           3.1522e-01, -2.2788e-01, -2.8703e-02, -4.8760e-01, -4.9130e-01,
          -7.2047e-02, -2.3309e-01, -2.8799e-01,  2.1225e-02, -3.9233e-01,
           1.3725e-01]],

        [[ 2.8209e-01,  3.7416e-01,  2.1869e-01,  2.2563e-01,  3.8636e-01,
           3.7447e-01, -1.2585e-01,  2.2582e-01, -2.0385e-01,  2.4096e-02,
           4.5752e-01,  5.7423e-04, -3.3378e-01,  3.4628e-04, -2.4140e-01,
          -4.2125e-01]],

        [[ 2.8209e-01,  3.2839e-01,  3.5087e-01,  8.8238e-02,  1.3261e-01,
           5.2730e-01,  1.7252e-01,  1.4169e-01, -2.2895e-01, -1.4034e-01,
           2.5195e-01,  4.8483e-01, -1.1300e-01,  1.3027e-01, -4.3498e-01,
          -1.4093e-01]],

        [[ 2.8209e-01,  1.4422e-01,  4.2442e-01,  1.9441e-01,  1.2832e-01,
           2.8013e-01,  3.9855e-01,  3.7762e-01,  3.8895e-02,  6.7548e-02,
           2.9490e-01,  3.7406e-01,  2.5050e-01,  5.0425e-01,  8.9390e-02,
          -2.4193e-02]]])
tensor([[[ 2.8209e-01,  4.2376e-01,  2.3831e-01,  4.8635e-02,  9.4318e-02,
           4.6217e-01, -9.0303e-02,  5.3042e-02, -4.0549e-01, -3.6972e-01,
           1.2171e-01,  7.5104e-02, -3.2954e-01,  8.6195e-03, -5.2327e-01,
          -1.3195e-01]],

        [[ 2.8209e-01,  4.0948e-01,  2.3616e-01, -1.2363e-01, -2.3168e-01,
           4.4256e-01, -9.4354e-02, -1.3362e-01, -3.4871e-01, -2.5234e-01,
          -2.9627e-01,  6.4373e-02, -3.3043e-01, -1.9435e-02, -4.4592e-01,
           3.0503e-01]],

        [[ 2.8209e-01,  4.6354e-01,  1.4859e-01, -4.2209e-02, -8.9542e-02,
           3.1522e-01, -2.2788e-01, -2.8703e-02, -4.8760e-01, -4.9130e-01,
          -7.2047e-02, -2.3309e-01, -2.8799e-01,  2.1225e-02, -3.9233e-01,
           1.3725e-01]],

        [[ 2.8209e-01,  3.7416e-01,  2.1869e-01,  2.2563e-01,  3.8636e-01,
           3.7447e-01, -1.2585e-01,  2.2582e-01, -2.0385e-01,  2.4096e-02,
           4.5752e-01,  5.7423e-04, -3.3378e-01,  3.4628e-04, -2.4140e-01,
          -4.2125e-01]],

        [[ 2.8209e-01,  3.2839e-01,  3.5087e-01,  8.8238e-02,  1.3261e-01,
           5.2730e-01,  1.7252e-01,  1.4169e-01, -2.2895e-01, -1.4034e-01,
           2.5195e-01,  4.8483e-01, -1.1300e-01,  1.3027e-01, -4.3498e-01,
          -1.4093e-01]],

        [[ 2.8209e-01,  1.4422e-01,  4.2442e-01,  1.9441e-01,  1.2832e-01,
           2.8013e-01,  3.9855e-01,  3.7762e-01,  3.8895e-02,  6.7548e-02,
           2.9490e-01,  3.7406e-01,  2.5050e-01,  5.0425e-01,  8.9390e-02,
          -2.4193e-02]]])
tensor([[[ 2.8209e-01,  4.2376e-01,  2.3831e-01,  4.8635e-02,  9.4318e-02,
           4.6217e-01, -9.0303e-02,  5.3042e-02, -4.0549e-01, -3.6972e-01,
           1.2171e-01,  7.5104e-02, -3.2954e-01,  8.6195e-03, -5.2327e-01,
          -1.3195e-01]],

        [[ 2.8209e-01,  4.0948e-01,  2.3616e-01, -1.2363e-01, -2.3168e-01,
           4.4256e-01, -9.4354e-02, -1.3362e-01, -3.4871e-01, -2.5234e-01,
          -2.9627e-01,  6.4373e-02, -3.3043e-01, -1.9435e-02, -4.4592e-01,
           3.0503e-01]],

        [[ 2.8209e-01,  4.6354e-01,  1.4859e-01, -4.2209e-02, -8.9542e-02,
           3.1522e-01, -2.2788e-01, -2.8703e-02, -4.8760e-01, -4.9130e-01,
          -7.2047e-02, -2.3309e-01, -2.8799e-01,  2.1225e-02, -3.9233e-01,
           1.3725e-01]],

        [[ 2.8209e-01,  3.7416e-01,  2.1869e-01,  2.2563e-01,  3.8636e-01,
           3.7447e-01, -1.2585e-01,  2.2582e-01, -2.0385e-01,  2.4096e-02,
           4.5752e-01,  5.7423e-04, -3.3378e-01,  3.4628e-04, -2.4140e-01,
          -4.2125e-01]],

        [[ 2.8209e-01,  3.2839e-01,  3.5087e-01,  8.8238e-02,  1.3261e-01,
           5.2730e-01,  1.7252e-01,  1.4169e-01, -2.2895e-01, -1.4034e-01,
           2.5195e-01,  4.8483e-01, -1.1300e-01,  1.3027e-01, -4.3498e-01,
          -1.4093e-01]],

        [[ 2.8209e-01,  1.4422e-01,  4.2442e-01,  1.9441e-01,  1.2832e-01,
           2.8013e-01,  3.9855e-01,  3.7762e-01,  3.8895e-02,  6.7548e-02,
           2.9490e-01,  3.7406e-01,  2.5050e-01,  5.0425e-01,  8.9390e-02,
          -2.4193e-02]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 2.8209e-01,  4.2376e-01,  2.3831e-01,  4.8635e-02,  9.4318e-02,
           4.6217e-01, -9.0303e-02,  5.3042e-02, -4.0549e-01, -3.6972e-01,
           1.2171e-01,  7.5104e-02, -3.2954e-01,  8.6195e-03, -5.2327e-01,
          -1.3195e-01]],

        [[ 2.8209e-01,  4.0948e-01,  2.3616e-01, -1.2363e-01, -2.3168e-01,
           4.4256e-01, -9.4354e-02, -1.3362e-01, -3.4871e-01, -2.5234e-01,
          -2.9627e-01,  6.4373e-02, -3.3043e-01, -1.9435e-02, -4.4592e-01,
           3.0503e-01]],

        [[ 2.8209e-01,  4.6354e-01,  1.4859e-01, -4.2209e-02, -8.9542e-02,
           3.1522e-01, -2.2788e-01, -2.8703e-02, -4.8760e-01, -4.9130e-01,
          -7.2047e-02, -2.3309e-01, -2.8799e-01,  2.1225e-02, -3.9233e-01,
           1.3725e-01]],

        [[ 2.8209e-01,  3.7416e-01,  2.1869e-01,  2.2563e-01,  3.8636e-01,
           3.7447e-01, -1.2585e-01,  2.2582e-01, -2.0385e-01,  2.4096e-02,
           4.5752e-01,  5.7423e-04, -3.3378e-01,  3.4628e-04, -2.4140e-01,
          -4.2125e-01]],

        [[ 2.8209e-01,  3.2839e-01,  3.5087e-01,  8.8238e-02,  1.3261e-01,
           5.2730e-01,  1.7252e-01,  1.4169e-01, -2.2895e-01, -1.4034e-01,
           2.5195e-01,  4.8483e-01, -1.1300e-01,  1.3027e-01, -4.3498e-01,
          -1.4093e-01]],

        [[ 2.8209e-01,  1.4422e-01,  4.2442e-01,  1.9441e-01,  1.2832e-01,
           2.8013e-01,  3.9855e-01,  3.7762e-01,  3.8895e-02,  6.7548e-02,
           2.9490e-01,  3.7406e-01,  2.5050e-01,  5.0425e-01,  8.9390e-02,
          -2.4193e-02]]])
tensor([[[ 2.8209e-01,  4.2376e-01,  2.3831e-01,  4.8635e-02,  9.4318e-02,
           4.6217e-01, -9.0303e-02,  5.3042e-02, -4.0549e-01, -3.6972e-01,
           1.2171e-01,  7.5104e-02, -3.2954e-01,  8.6195e-03, -5.2327e-01,
          -1.3195e-01]],

        [[ 2.8209e-01,  4.0948e-01,  2.3616e-01, -1.2363e-01, -2.3168e-01,
           4.4256e-01, -9.4354e-02, -1.3362e-01, -3.4871e-01, -2.5234e-01,
          -2.9627e-01,  6.4373e-02, -3.3043e-01, -1.9435e-02, -4.4592e-01,
           3.0503e-01]],

        [[ 2.8209e-01,  4.6354e-01,  1.4859e-01, -4.2209e-02, -8.9542e-02,
           3.1522e-01, -2.2788e-01, -2.8703e-02, -4.8760e-01, -4.9130e-01,
          -7.2047e-02, -2.3309e-01, -2.8799e-01,  2.1225e-02, -3.9233e-01,
           1.3725e-01]],

        [[ 2.8209e-01,  3.7416e-01,  2.1869e-01,  2.2563e-01,  3.8636e-01,
           3.7447e-01, -1.2585e-01,  2.2582e-01, -2.0385e-01,  2.4096e-02,
           4.5752e-01,  5.7423e-04, -3.3378e-01,  3.4628e-04, -2.4140e-01,
          -4.2125e-01]],

        [[ 2.8209e-01,  3.2839e-01,  3.5087e-01,  8.8238e-02,  1.3261e-01,
           5.2730e-01,  1.7252e-01,  1.4169e-01, -2.2895e-01, -1.4034e-01,
           2.5195e-01,  4.8483e-01, -1.1300e-01,  1.3027e-01, -4.3498e-01,
          -1.4093e-01]],

        [[ 2.8209e-01,  1.4422e-01,  4.2442e-01,  1.9441e-01,  1.2832e-01,
           2.8013e-01,  3.9855e-01,  3.7762e-01,  3.8895e-02,  6.7548e-02,
           2.9490e-01,  3.7406e-01,  2.5050e-01,  5.0425e-01,  8.9390e-02,
          -2.4193e-02]]])
tensor([[[ 2.8209e-01,  4.2376e-01,  2.3831e-01,  4.8635e-02,  9.4318e-02,
           4.6217e-01, -9.0303e-02,  5.3042e-02, -4.0549e-01, -3.6972e-01,
           1.2171e-01,  7.5104e-02, -3.2954e-01,  8.6195e-03, -5.2327e-01,
          -1.3195e-01]],

        [[ 2.8209e-01,  4.0948e-01,  2.3616e-01, -1.2363e-01, -2.3168e-01,
           4.4256e-01, -9.4354e-02, -1.3362e-01, -3.4871e-01, -2.5234e-01,
          -2.9627e-01,  6.4373e-02, -3.3043e-01, -1.9435e-02, -4.4592e-01,
           3.0503e-01]],

        [[ 2.8209e-01,  4.6354e-01,  1.4859e-01, -4.2209e-02, -8.9542e-02,
           3.1522e-01, -2.2788e-01, -2.8703e-02, -4.8760e-01, -4.9130e-01,
          -7.2047e-02, -2.3309e-01, -2.8799e-01,  2.1225e-02, -3.9233e-01,
           1.3725e-01]],

        [[ 2.8209e-01,  3.7416e-01,  2.1869e-01,  2.2563e-01,  3.8636e-01,
           3.7447e-01, -1.2585e-01,  2.2582e-01, -2.0385e-01,  2.4096e-02,
           4.5752e-01,  5.7423e-04, -3.3378e-01,  3.4628e-04, -2.4140e-01,
          -4.2125e-01]],

        [[ 2.8209e-01,  3.2839e-01,  3.5087e-01,  8.8238e-02,  1.3261e-01,
           5.2730e-01,  1.7252e-01,  1.4169e-01, -2.2895e-01, -1.4034e-01,
           2.5195e-01,  4.8483e-01, -1.1300e-01,  1.3027e-01, -4.3498e-01,
          -1.4093e-01]],

        [[ 2.8209e-01,  1.4422e-01,  4.2442e-01,  1.9441e-01,  1.2832e-01,
           2.8013e-01,  3.9855e-01,  3.7762e-01,  3.8895e-02,  6.7548e-02,
           2.9490e-01,  3.7406e-01,  2.5050e-01,  5.0425e-01,  8.9390e-02,
          -2.4193e-02]]])
tensor([[[ 2.8209e-01,  4.4583e-01,  1.3093e-01,  1.5108e-01,  3.0825e-01,
           2.6714e-01, -2.4745e-01,  9.0525e-02, -4.0259e-01, -2.9383e-01,
           2.1854e-01, -2.6731e-01, -2.6409e-01, -9.0582e-02, -2.8543e-01,
          -4.3826e-01]],

        [[ 2.8209e-01,  4.1893e-01,  1.1291e-01, -2.2469e-01, -4.3077e-01,
           2.1648e-01, -2.6486e-01, -1.1610e-01, -2.8606e-01, -5.0961e-02,
          -2.6338e-01, -2.8723e-01, -2.3569e-01,  1.5405e-01, -1.7490e-01,
           5.4102e-01]],

        [[ 2.8209e-01,  3.5258e-01,  3.3642e-01, -3.5266e-02, -5.6903e-02,
           5.4283e-01,  1.3317e-01, -5.4296e-02, -2.8160e-01, -2.1505e-01,
          -1.0366e-01,  4.5197e-01, -1.6177e-01, -4.5208e-02, -5.1300e-01,
           6.6305e-02]],

        [[ 2.8209e-01, -1.0072e-03,  4.8793e-01, -2.5631e-02,  1.1815e-04,
          -2.2492e-03,  6.2818e-01, -5.7233e-02,  1.5009e-03, -1.0036e-05,
           3.1216e-04, -3.7558e-03,  7.4019e-01, -9.5571e-02,  3.9655e-03,
          -8.4778e-05]],

        [[ 2.8209e-01,  1.8615e-01,  2.7397e-01, -3.5919e-01, -3.0600e-01,
           2.3340e-01, -1.7900e-02, -4.5037e-01,  2.1594e-01,  3.3184e-01,
          -4.5396e-01,  9.9613e-02, -2.9879e-01, -1.9221e-01,  3.2035e-01,
          -4.5542e-02]],

        [[ 2.8209e-01,  2.6392e-01,  3.2502e-01,  2.5187e-01,  3.0421e-01,
           3.9257e-01,  1.0329e-01,  3.7465e-01, -1.4221e-02,  1.6109e-01,
           5.3541e-01,  2.9934e-01, -1.9549e-01,  2.8567e-01, -2.5029e-02,
          -1.8541e-01]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 2.8209e-01,  4.2376e-01,  2.3831e-01,  4.8635e-02,  9.4318e-02,
           4.6217e-01, -9.0303e-02,  5.3042e-02, -4.0549e-01, -3.6972e-01,
           1.2171e-01,  7.5104e-02, -3.2954e-01,  8.6195e-03, -5.2327e-01,
          -1.3195e-01]],

        [[ 2.8209e-01,  4.0948e-01,  2.3616e-01, -1.2363e-01, -2.3168e-01,
           4.4256e-01, -9.4354e-02, -1.3362e-01, -3.4871e-01, -2.5234e-01,
          -2.9627e-01,  6.4373e-02, -3.3043e-01, -1.9435e-02, -4.4592e-01,
           3.0503e-01]],

        [[ 2.8209e-01,  4.6354e-01,  1.4859e-01, -4.2209e-02, -8.9542e-02,
           3.1522e-01, -2.2788e-01, -2.8703e-02, -4.8760e-01, -4.9130e-01,
          -7.2047e-02, -2.3309e-01, -2.8799e-01,  2.1225e-02, -3.9233e-01,
           1.3725e-01]],

        [[ 2.8209e-01,  3.7416e-01,  2.1869e-01,  2.2563e-01,  3.8636e-01,
           3.7447e-01, -1.2585e-01,  2.2582e-01, -2.0385e-01,  2.4096e-02,
           4.5752e-01,  5.7423e-04, -3.3378e-01,  3.4628e-04, -2.4140e-01,
          -4.2125e-01]],

        [[ 2.8209e-01,  3.2839e-01,  3.5087e-01,  8.8238e-02,  1.3261e-01,
           5.2730e-01,  1.7252e-01,  1.4169e-01, -2.2895e-01, -1.4034e-01,
           2.5195e-01,  4.8483e-01, -1.1300e-01,  1.3027e-01, -4.3498e-01,
          -1.4093e-01]],

        [[ 2.8209e-01,  1.4422e-01,  4.2442e-01,  1.9441e-01,  1.2832e-01,
           2.8013e-01,  3.9855e-01,  3.7762e-01,  3.8895e-02,  6.7548e-02,
           2.9490e-01,  3.7406e-01,  2.5050e-01,  5.0425e-01,  8.9390e-02,
          -2.4193e-02]]])
tensor([[[ 2.8209e-01,  4.2376e-01,  2.3831e-01,  4.8635e-02,  9.4318e-02,
           4.6217e-01, -9.0303e-02,  5.3042e-02, -4.0549e-01, -3.6972e-01,
           1.2171e-01,  7.5104e-02, -3.2954e-01,  8.6195e-03, -5.2327e-01,
          -1.3195e-01]],

        [[ 2.8209e-01,  4.0948e-01,  2.3616e-01, -1.2363e-01, -2.3168e-01,
           4.4256e-01, -9.4354e-02, -1.3362e-01, -3.4871e-01, -2.5234e-01,
          -2.9627e-01,  6.4373e-02, -3.3043e-01, -1.9435e-02, -4.4592e-01,
           3.0503e-01]],

        [[ 2.8209e-01,  4.6354e-01,  1.4859e-01, -4.2209e-02, -8.9542e-02,
           3.1522e-01, -2.2788e-01, -2.8703e-02, -4.8760e-01, -4.9130e-01,
          -7.2047e-02, -2.3309e-01, -2.8799e-01,  2.1225e-02, -3.9233e-01,
           1.3725e-01]],

        [[ 2.8209e-01,  3.7416e-01,  2.1869e-01,  2.2563e-01,  3.8636e-01,
           3.7447e-01, -1.2585e-01,  2.2582e-01, -2.0385e-01,  2.4096e-02,
           4.5752e-01,  5.7423e-04, -3.3378e-01,  3.4628e-04, -2.4140e-01,
          -4.2125e-01]],

        [[ 2.8209e-01,  3.2839e-01,  3.5087e-01,  8.8238e-02,  1.3261e-01,
           5.2730e-01,  1.7252e-01,  1.4169e-01, -2.2895e-01, -1.4034e-01,
           2.5195e-01,  4.8483e-01, -1.1300e-01,  1.3027e-01, -4.3498e-01,
          -1.4093e-01]],

        [[ 2.8209e-01,  1.4422e-01,  4.2442e-01,  1.9441e-01,  1.2832e-01,
           2.8013e-01,  3.9855e-01,  3.7762e-01,  3.8895e-02,  6.7548e-02,
           2.9490e-01,  3.7406e-01,  2.5050e-01,  5.0425e-01,  8.9390e-02,
          -2.4193e-02]]])
tensor([[[ 2.8209e-01,  4.4583e-01,  1.3093e-01,  1.5108e-01,  3.0825e-01,
           2.6714e-01, -2.4745e-01,  9.0525e-02, -4.0259e-01, -2.9383e-01,
           2.1854e-01, -2.6731e-01, -2.6409e-01, -9.0582e-02, -2.8543e-01,
          -4.3826e-01]],

        [[ 2.8209e-01,  4.1893e-01,  1.1291e-01, -2.2469e-01, -4.3077e-01,
           2.1648e-01, -2.6486e-01, -1.1610e-01, -2.8606e-01, -5.0961e-02,
          -2.6338e-01, -2.8723e-01, -2.3569e-01,  1.5405e-01, -1.7490e-01,
           5.4102e-01]],

        [[ 2.8209e-01,  3.5258e-01,  3.3642e-01, -3.5266e-02, -5.6903e-02,
           5.4283e-01,  1.3317e-01, -5.4296e-02, -2.8160e-01, -2.1505e-01,
          -1.0366e-01,  4.5197e-01, -1.6177e-01, -4.5208e-02, -5.1300e-01,
           6.6305e-02]],

        [[ 2.8209e-01, -1.0072e-03,  4.8793e-01, -2.5631e-02,  1.1815e-04,
          -2.2492e-03,  6.2818e-01, -5.7233e-02,  1.5009e-03, -1.0036e-05,
           3.1216e-04, -3.7558e-03,  7.4019e-01, -9.5571e-02,  3.9655e-03,
          -8.4778e-05]],

        [[ 2.8209e-01,  1.8615e-01,  2.7397e-01, -3.5919e-01, -3.0600e-01,
           2.3340e-01, -1.7900e-02, -4.5037e-01,  2.1594e-01,  3.3184e-01,
          -4.5396e-01,  9.9613e-02, -2.9879e-01, -1.9221e-01,  3.2035e-01,
          -4.5542e-02]],

        [[ 2.8209e-01,  2.6392e-01,  3.2502e-01,  2.5187e-01,  3.0421e-01,
           3.9257e-01,  1.0329e-01,  3.7465e-01, -1.4221e-02,  1.6109e-01,
           5.3541e-01,  2.9934e-01, -1.9549e-01,  2.8567e-01, -2.5029e-02,
          -1.8541e-01]]])
tensor([[[ 2.8209e-01,  4.4583e-01,  1.3093e-01,  1.5108e-01,  3.0825e-01,
           2.6714e-01, -2.4745e-01,  9.0525e-02, -4.0259e-01, -2.9383e-01,
           2.1854e-01, -2.6731e-01, -2.6409e-01, -9.0582e-02, -2.8543e-01,
          -4.3826e-01]],

        [[ 2.8209e-01,  4.1893e-01,  1.1291e-01, -2.2469e-01, -4.3077e-01,
           2.1648e-01, -2.6486e-01, -1.1610e-01, -2.8606e-01, -5.0961e-02,
          -2.6338e-01, -2.8723e-01, -2.3569e-01,  1.5405e-01, -1.7490e-01,
           5.4102e-01]],

        [[ 2.8209e-01,  3.5258e-01,  3.3642e-01, -3.5266e-02, -5.6903e-02,
           5.4283e-01,  1.3317e-01, -5.4296e-02, -2.8160e-01, -2.1505e-01,
          -1.0366e-01,  4.5197e-01, -1.6177e-01, -4.5208e-02, -5.1300e-01,
           6.6305e-02]],

        [[ 2.8209e-01, -1.0072e-03,  4.8793e-01, -2.5631e-02,  1.1815e-04,
          -2.2492e-03,  6.2818e-01, -5.7233e-02,  1.5009e-03, -1.0036e-05,
           3.1216e-04, -3.7558e-03,  7.4019e-01, -9.5571e-02,  3.9655e-03,
          -8.4778e-05]],

        [[ 2.8209e-01,  1.8615e-01,  2.7397e-01, -3.5919e-01, -3.0600e-01,
           2.3340e-01, -1.7900e-02, -4.5037e-01,  2.1594e-01,  3.3184e-01,
          -4.5396e-01,  9.9613e-02, -2.9879e-01, -1.9221e-01,  3.2035e-01,
          -4.5542e-02]],

        [[ 2.8209e-01,  2.6392e-01,  3.2502e-01,  2.5187e-01,  3.0421e-01,
           3.9257e-01,  1.0329e-01,  3.7465e-01, -1.4221e-02,  1.6109e-01,
           5.3541e-01,  2.9934e-01, -1.9549e-01,  2.8567e-01, -2.5029e-02,
          -1.8541e-01]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 2.8209e-01,  4.4583e-01,  1.3093e-01,  1.5108e-01,  3.0825e-01,
           2.6714e-01, -2.4745e-01,  9.0525e-02, -4.0259e-01, -2.9383e-01,
           2.1854e-01, -2.6731e-01, -2.6409e-01, -9.0582e-02, -2.8543e-01,
          -4.3826e-01]],

        [[ 2.8209e-01,  4.1893e-01,  1.1291e-01, -2.2469e-01, -4.3077e-01,
           2.1648e-01, -2.6486e-01, -1.1610e-01, -2.8606e-01, -5.0961e-02,
          -2.6338e-01, -2.8723e-01, -2.3569e-01,  1.5405e-01, -1.7490e-01,
           5.4102e-01]],

        [[ 2.8209e-01,  3.5258e-01,  3.3642e-01, -3.5266e-02, -5.6903e-02,
           5.4283e-01,  1.3317e-01, -5.4296e-02, -2.8160e-01, -2.1505e-01,
          -1.0366e-01,  4.5197e-01, -1.6177e-01, -4.5208e-02, -5.1300e-01,
           6.6305e-02]],

        [[ 2.8209e-01, -1.0072e-03,  4.8793e-01, -2.5631e-02,  1.1815e-04,
          -2.2492e-03,  6.2818e-01, -5.7233e-02,  1.5009e-03, -1.0036e-05,
           3.1216e-04, -3.7558e-03,  7.4019e-01, -9.5571e-02,  3.9655e-03,
          -8.4778e-05]],

        [[ 2.8209e-01,  1.8615e-01,  2.7397e-01, -3.5919e-01, -3.0600e-01,
           2.3340e-01, -1.7900e-02, -4.5037e-01,  2.1594e-01,  3.3184e-01,
          -4.5396e-01,  9.9613e-02, -2.9879e-01, -1.9221e-01,  3.2035e-01,
          -4.5542e-02]],

        [[ 2.8209e-01,  2.6392e-01,  3.2502e-01,  2.5187e-01,  3.0421e-01,
           3.9257e-01,  1.0329e-01,  3.7465e-01, -1.4221e-02,  1.6109e-01,
           5.3541e-01,  2.9934e-01, -1.9549e-01,  2.8567e-01, -2.5029e-02,
          -1.8541e-01]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 2.8209e-01,  4.4583e-01,  1.3093e-01,  1.5108e-01,  3.0825e-01,
           2.6714e-01, -2.4745e-01,  9.0525e-02, -4.0259e-01, -2.9383e-01,
           2.1854e-01, -2.6731e-01, -2.6409e-01, -9.0582e-02, -2.8543e-01,
          -4.3826e-01]],

        [[ 2.8209e-01,  4.1893e-01,  1.1291e-01, -2.2469e-01, -4.3077e-01,
           2.1648e-01, -2.6486e-01, -1.1610e-01, -2.8606e-01, -5.0961e-02,
          -2.6338e-01, -2.8723e-01, -2.3569e-01,  1.5405e-01, -1.7490e-01,
           5.4102e-01]],

        [[ 2.8209e-01,  3.5258e-01,  3.3642e-01, -3.5266e-02, -5.6903e-02,
           5.4283e-01,  1.3317e-01, -5.4296e-02, -2.8160e-01, -2.1505e-01,
          -1.0366e-01,  4.5197e-01, -1.6177e-01, -4.5208e-02, -5.1300e-01,
           6.6305e-02]],

        [[ 2.8209e-01, -1.0072e-03,  4.8793e-01, -2.5631e-02,  1.1815e-04,
          -2.2492e-03,  6.2818e-01, -5.7233e-02,  1.5009e-03, -1.0036e-05,
           3.1216e-04, -3.7558e-03,  7.4019e-01, -9.5571e-02,  3.9655e-03,
          -8.4778e-05]],

        [[ 2.8209e-01,  1.8615e-01,  2.7397e-01, -3.5919e-01, -3.0600e-01,
           2.3340e-01, -1.7900e-02, -4.5037e-01,  2.1594e-01,  3.3184e-01,
          -4.5396e-01,  9.9613e-02, -2.9879e-01, -1.9221e-01,  3.2035e-01,
          -4.5542e-02]],

        [[ 2.8209e-01,  2.6392e-01,  3.2502e-01,  2.5187e-01,  3.0421e-01,
           3.9257e-01,  1.0329e-01,  3.7465e-01, -1.4221e-02,  1.6109e-01,
           5.3541e-01,  2.9934e-01, -1.9549e-01,  2.8567e-01, -2.5029e-02,
          -1.8541e-01]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 2.8209e-01,  4.2376e-01,  2.3831e-01,  4.8635e-02,  9.4318e-02,
           4.6217e-01, -9.0303e-02,  5.3042e-02, -4.0549e-01, -3.6972e-01,
           1.2171e-01,  7.5104e-02, -3.2954e-01,  8.6195e-03, -5.2327e-01,
          -1.3195e-01]],

        [[ 2.8209e-01,  4.0948e-01,  2.3616e-01, -1.2363e-01, -2.3168e-01,
           4.4256e-01, -9.4354e-02, -1.3362e-01, -3.4871e-01, -2.5234e-01,
          -2.9627e-01,  6.4373e-02, -3.3043e-01, -1.9435e-02, -4.4592e-01,
           3.0503e-01]],

        [[ 2.8209e-01,  4.6354e-01,  1.4859e-01, -4.2209e-02, -8.9542e-02,
           3.1522e-01, -2.2788e-01, -2.8703e-02, -4.8760e-01, -4.9130e-01,
          -7.2047e-02, -2.3309e-01, -2.8799e-01,  2.1225e-02, -3.9233e-01,
           1.3725e-01]],

        [[ 2.8209e-01,  3.7416e-01,  2.1869e-01,  2.2563e-01,  3.8636e-01,
           3.7447e-01, -1.2585e-01,  2.2582e-01, -2.0385e-01,  2.4096e-02,
           4.5752e-01,  5.7423e-04, -3.3378e-01,  3.4628e-04, -2.4140e-01,
          -4.2125e-01]],

        [[ 2.8209e-01,  3.2839e-01,  3.5087e-01,  8.8238e-02,  1.3261e-01,
           5.2730e-01,  1.7252e-01,  1.4169e-01, -2.2895e-01, -1.4034e-01,
           2.5195e-01,  4.8483e-01, -1.1300e-01,  1.3027e-01, -4.3498e-01,
          -1.4093e-01]],

        [[ 2.8209e-01,  1.4422e-01,  4.2442e-01,  1.9441e-01,  1.2832e-01,
           2.8013e-01,  3.9855e-01,  3.7762e-01,  3.8895e-02,  6.7548e-02,
           2.9490e-01,  3.7406e-01,  2.5050e-01,  5.0425e-01,  8.9390e-02,
          -2.4193e-02]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 2.8209e-01,  4.2376e-01,  2.3831e-01,  4.8635e-02,  9.4318e-02,
           4.6217e-01, -9.0303e-02,  5.3042e-02, -4.0549e-01, -3.6972e-01,
           1.2171e-01,  7.5104e-02, -3.2954e-01,  8.6195e-03, -5.2327e-01,
          -1.3195e-01]],

        [[ 2.8209e-01,  4.0948e-01,  2.3616e-01, -1.2363e-01, -2.3168e-01,
           4.4256e-01, -9.4354e-02, -1.3362e-01, -3.4871e-01, -2.5234e-01,
          -2.9627e-01,  6.4373e-02, -3.3043e-01, -1.9435e-02, -4.4592e-01,
           3.0503e-01]],

        [[ 2.8209e-01,  4.6354e-01,  1.4859e-01, -4.2209e-02, -8.9542e-02,
           3.1522e-01, -2.2788e-01, -2.8703e-02, -4.8760e-01, -4.9130e-01,
          -7.2047e-02, -2.3309e-01, -2.8799e-01,  2.1225e-02, -3.9233e-01,
           1.3725e-01]],

        [[ 2.8209e-01,  3.7416e-01,  2.1869e-01,  2.2563e-01,  3.8636e-01,
           3.7447e-01, -1.2585e-01,  2.2582e-01, -2.0385e-01,  2.4096e-02,
           4.5752e-01,  5.7423e-04, -3.3378e-01,  3.4628e-04, -2.4140e-01,
          -4.2125e-01]],

        [[ 2.8209e-01,  3.2839e-01,  3.5087e-01,  8.8238e-02,  1.3261e-01,
           5.2730e-01,  1.7252e-01,  1.4169e-01, -2.2895e-01, -1.4034e-01,
           2.5195e-01,  4.8483e-01, -1.1300e-01,  1.3027e-01, -4.3498e-01,
          -1.4093e-01]],

        [[ 2.8209e-01,  1.4422e-01,  4.2442e-01,  1.9441e-01,  1.2832e-01,
           2.8013e-01,  3.9855e-01,  3.7762e-01,  3.8895e-02,  6.7548e-02,
           2.9490e-01,  3.7406e-01,  2.5050e-01,  5.0425e-01,  8.9390e-02,
          -2.4193e-02]]])
tensor([[[ 0.2821,  0.2603,  0.4063, -0.0770, -0.0917,  0.4840,  0.3387,
          -0.1431, -0.1415, -0.0658, -0.2017,  0.5982,  0.1417, -0.1769,
          -0.3113,  0.0768]],

        [[ 0.2821,  0.1170,  0.4138, -0.2319, -0.1242,  0.2217,  0.3633,
          -0.4392,  0.0917,  0.0874, -0.2784,  0.2832,  0.1854, -0.5611,
           0.2056, -0.0149]],

        [[ 0.2821,  0.3065,  0.3469, -0.1563, -0.2193,  0.4866,  0.1615,
          -0.2482, -0.1591, -0.0320, -0.4119,  0.4359, -0.1271, -0.2223,
          -0.2988,  0.2036]],

        [[ 0.2821,  0.3320,  0.2162, -0.2859, -0.4344,  0.3285, -0.1301,
          -0.2829, -0.0652,  0.2267, -0.5086, -0.0065, -0.3337,  0.0056,
          -0.0763,  0.3601]],

        [[ 0.2821,  0.0760,  0.0900, -0.4742, -0.1648,  0.0313, -0.2833,
          -0.1954,  0.5013,  0.2570, -0.0804, -0.0590, -0.1946,  0.3682,
           0.2444, -0.4978]],

        [[ 0.2821,  0.2399,  0.1845,  0.3836,  0.4211,  0.2026, -0.1804,
           0.3239,  0.2050,  0.4658,  0.4208, -0.0644, -0.3223, -0.1029,
           0.2048, -0.0495]]])
tensor([[[ 2.8209e-01,  4.2376e-01,  2.3831e-01,  4.8635e-02,  9.4318e-02,
           4.6217e-01, -9.0303e-02,  5.3042e-02, -4.0549e-01, -3.6972e-01,
           1.2171e-01,  7.5104e-02, -3.2954e-01,  8.6195e-03, -5.2327e-01,
          -1.3195e-01]],

        [[ 2.8209e-01,  4.0948e-01,  2.3616e-01, -1.2363e-01, -2.3168e-01,
           4.4256e-01, -9.4354e-02, -1.3362e-01, -3.4871e-01, -2.5234e-01,
          -2.9627e-01,  6.4373e-02, -3.3043e-01, -1.9435e-02, -4.4592e-01,
           3.0503e-01]],

        [[ 2.8209e-01,  4.6354e-01,  1.4859e-01, -4.2209e-02, -8.9542e-02,
           3.1522e-01, -2.2788e-01, -2.8703e-02, -4.8760e-01, -4.9130e-01,
          -7.2047e-02, -2.3309e-01, -2.8799e-01,  2.1225e-02, -3.9233e-01,
           1.3725e-01]],

        [[ 2.8209e-01,  3.7416e-01,  2.1869e-01,  2.2563e-01,  3.8636e-01,
           3.7447e-01, -1.2585e-01,  2.2582e-01, -2.0385e-01,  2.4096e-02,
           4.5752e-01,  5.7423e-04, -3.3378e-01,  3.4628e-04, -2.4140e-01,
          -4.2125e-01]],

        [[ 2.8209e-01,  3.2839e-01,  3.5087e-01,  8.8238e-02,  1.3261e-01,
           5.2730e-01,  1.7252e-01,  1.4169e-01, -2.2895e-01, -1.4034e-01,
           2.5195e-01,  4.8483e-01, -1.1300e-01,  1.3027e-01, -4.3498e-01,
          -1.4093e-01]],

        [[ 2.8209e-01,  1.4422e-01,  4.2442e-01,  1.9441e-01,  1.2832e-01,
           2.8013e-01,  3.9855e-01,  3.7762e-01,  3.8895e-02,  6.7548e-02,
           2.9490e-01,  3.7406e-01,  2.5050e-01,  5.0425e-01,  8.9390e-02,
          -2.4193e-02]]])
tensor([[[ 2.8209e-01,  4.4583e-01,  1.3093e-01,  1.5108e-01,  3.0825e-01,
           2.6714e-01, -2.4745e-01,  9.0525e-02, -4.0259e-01, -2.9383e-01,
           2.1854e-01, -2.6731e-01, -2.6409e-01, -9.0582e-02, -2.8543e-01,
          -4.3826e-01]],

        [[ 2.8209e-01,  4.1893e-01,  1.1291e-01, -2.2469e-01, -4.3077e-01,
           2.1648e-01, -2.6486e-01, -1.1610e-01, -2.8606e-01, -5.0961e-02,
          -2.6338e-01, -2.8723e-01, -2.3569e-01,  1.5405e-01, -1.7490e-01,
           5.4102e-01]],

        [[ 2.8209e-01,  3.5258e-01,  3.3642e-01, -3.5266e-02, -5.6903e-02,
           5.4283e-01,  1.3317e-01, -5.4296e-02, -2.8160e-01, -2.1505e-01,
          -1.0366e-01,  4.5197e-01, -1.6177e-01, -4.5208e-02, -5.1300e-01,
           6.6305e-02]],

        [[ 2.8209e-01, -1.0072e-03,  4.8793e-01, -2.5631e-02,  1.1815e-04,
          -2.2492e-03,  6.2818e-01, -5.7233e-02,  1.5009e-03, -1.0036e-05,
           3.1216e-04, -3.7558e-03,  7.4019e-01, -9.5571e-02,  3.9655e-03,
          -8.4778e-05]],

        [[ 2.8209e-01,  1.8615e-01,  2.7397e-01, -3.5919e-01, -3.0600e-01,
           2.3340e-01, -1.7900e-02, -4.5037e-01,  2.1594e-01,  3.3184e-01,
          -4.5396e-01,  9.9613e-02, -2.9879e-01, -1.9221e-01,  3.2035e-01,
          -4.5542e-02]],

        [[ 2.8209e-01,  2.6392e-01,  3.2502e-01,  2.5187e-01,  3.0421e-01,
           3.9257e-01,  1.0329e-01,  3.7465e-01, -1.4221e-02,  1.6109e-01,
           5.3541e-01,  2.9934e-01, -1.9549e-01,  2.8567e-01, -2.5029e-02,
          -1.8541e-01]]])
  0%|          | 0/8880 [00:00<?, ?it/s]Steps:   0%|          | 0/8880 [00:00<?, ?it/s]Traceback (most recent call last):
  File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/train_svd_controlnet.py", line 1935, in <module>
    main()
  File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/train_svd_controlnet.py", line 1646, in main
    down_block_res_samples, mid_block_res_sample = controlnet(
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1636, in forward
    else self._run_ddp_forward(*inputs, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1454, in _run_ddp_forward
    return self.module(*inputs, **kwargs)  # type: ignore[index]
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/utils/operations.py", line 819, in forward
    return model_forward(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/utils/operations.py", line 807, in __call__
    return convert_to_fp32(self.model_forward(*args, **kwargs))
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/amp/autocast_mode.py", line 43, in decorate_autocast
    return func(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/models/controlnet_sdv.py", line 501, in forward
    emb = self.time_embedding(t_emb, timestep_cond)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/diffusers/models/embeddings.py", line 375, in forward
    sample = sample + self.cond_proj(condition)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/linear.py", line 117, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 shapes cannot be multiplied (12x16 and 1x320)
[rank1]: Traceback (most recent call last):
[rank1]:   File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/train_svd_controlnet.py", line 1935, in <module>
[rank1]:     main()
[rank1]:   File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/train_svd_controlnet.py", line 1646, in main
[rank1]:     down_block_res_samples, mid_block_res_sample = controlnet(
[rank1]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
[rank1]:     return self._call_impl(*args, **kwargs)
[rank1]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
[rank1]:     return forward_call(*args, **kwargs)
[rank1]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1636, in forward
[rank1]:     else self._run_ddp_forward(*inputs, **kwargs)
[rank1]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1454, in _run_ddp_forward
[rank1]:     return self.module(*inputs, **kwargs)  # type: ignore[index]
[rank1]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
[rank1]:     return self._call_impl(*args, **kwargs)
[rank1]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
[rank1]:     return forward_call(*args, **kwargs)
[rank1]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/utils/operations.py", line 819, in forward
[rank1]:     return model_forward(*args, **kwargs)
[rank1]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/utils/operations.py", line 807, in __call__
[rank1]:     return convert_to_fp32(self.model_forward(*args, **kwargs))
[rank1]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/amp/autocast_mode.py", line 43, in decorate_autocast
[rank1]:     return func(*args, **kwargs)
[rank1]:   File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/models/controlnet_sdv.py", line 501, in forward
[rank1]:     emb = self.time_embedding(t_emb, timestep_cond)
[rank1]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
[rank1]:     return self._call_impl(*args, **kwargs)
[rank1]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
[rank1]:     return forward_call(*args, **kwargs)
[rank1]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/diffusers/models/embeddings.py", line 375, in forward
[rank1]:     sample = sample + self.cond_proj(condition)
[rank1]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
[rank1]:     return self._call_impl(*args, **kwargs)
[rank1]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
[rank1]:     return forward_call(*args, **kwargs)
[rank1]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/linear.py", line 117, in forward
[rank1]:     return F.linear(input, self.weight, self.bias)
[rank1]: RuntimeError: mat1 and mat2 shapes cannot be multiplied (12x16 and 1x320)
Traceback (most recent call last):
  File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/train_svd_controlnet.py", line 1935, in <module>
    main()
  File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/train_svd_controlnet.py", line 1646, in main
    down_block_res_samples, mid_block_res_sample = controlnet(
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1636, in forward
    else self._run_ddp_forward(*inputs, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1454, in _run_ddp_forward
    return self.module(*inputs, **kwargs)  # type: ignore[index]
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/utils/operations.py", line 819, in forward
    return model_forward(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/utils/operations.py", line 807, in __call__
    return convert_to_fp32(self.model_forward(*args, **kwargs))
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/amp/autocast_mode.py", line 43, in decorate_autocast
    return func(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/models/controlnet_sdv.py", line 501, in forward
    emb = self.time_embedding(t_emb, timestep_cond)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/diffusers/models/embeddings.py", line 375, in forward
    sample = sample + self.cond_proj(condition)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/linear.py", line 117, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 shapes cannot be multiplied (12x16 and 1x320)
[rank0]: Traceback (most recent call last):
[rank0]:   File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/train_svd_controlnet.py", line 1935, in <module>
[rank0]:     main()
[rank0]:   File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/train_svd_controlnet.py", line 1646, in main
[rank0]:     down_block_res_samples, mid_block_res_sample = controlnet(
[rank0]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
[rank0]:     return self._call_impl(*args, **kwargs)
[rank0]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
[rank0]:     return forward_call(*args, **kwargs)
[rank0]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1636, in forward
[rank0]:     else self._run_ddp_forward(*inputs, **kwargs)
[rank0]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1454, in _run_ddp_forward
[rank0]:     return self.module(*inputs, **kwargs)  # type: ignore[index]
[rank0]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
[rank0]:     return self._call_impl(*args, **kwargs)
[rank0]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
[rank0]:     return forward_call(*args, **kwargs)
[rank0]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/utils/operations.py", line 819, in forward
[rank0]:     return model_forward(*args, **kwargs)
[rank0]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/utils/operations.py", line 807, in __call__
[rank0]:     return convert_to_fp32(self.model_forward(*args, **kwargs))
[rank0]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/amp/autocast_mode.py", line 43, in decorate_autocast
[rank0]:     return func(*args, **kwargs)
[rank0]:   File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/models/controlnet_sdv.py", line 501, in forward
[rank0]:     emb = self.time_embedding(t_emb, timestep_cond)
[rank0]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
[rank0]:     return self._call_impl(*args, **kwargs)
[rank0]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
[rank0]:     return forward_call(*args, **kwargs)
[rank0]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/diffusers/models/embeddings.py", line 375, in forward
[rank0]:     sample = sample + self.cond_proj(condition)
[rank0]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
[rank0]:     return self._call_impl(*args, **kwargs)
[rank0]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
[rank0]:     return forward_call(*args, **kwargs)
[rank0]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/linear.py", line 117, in forward
[rank0]:     return F.linear(input, self.weight, self.bias)
[rank0]: RuntimeError: mat1 and mat2 shapes cannot be multiplied (12x16 and 1x320)
Traceback (most recent call last):
  File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/train_svd_controlnet.py", line 1935, in <module>
    main()
  File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/train_svd_controlnet.py", line 1646, in main
    down_block_res_samples, mid_block_res_sample = controlnet(
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1636, in forward
    else self._run_ddp_forward(*inputs, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1454, in _run_ddp_forward
    return self.module(*inputs, **kwargs)  # type: ignore[index]
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/utils/operations.py", line 819, in forward
    return model_forward(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/utils/operations.py", line 807, in __call__
    return convert_to_fp32(self.model_forward(*args, **kwargs))
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/amp/autocast_mode.py", line 43, in decorate_autocast
    return func(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/models/controlnet_sdv.py", line 501, in forward
    emb = self.time_embedding(t_emb, timestep_cond)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/diffusers/models/embeddings.py", line 375, in forward
    sample = sample + self.cond_proj(condition)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/linear.py", line 117, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 shapes cannot be multiplied (12x16 and 1x320)
[rank2]: Traceback (most recent call last):
[rank2]:   File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/train_svd_controlnet.py", line 1935, in <module>
[rank2]:     main()
[rank2]:   File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/train_svd_controlnet.py", line 1646, in main
[rank2]:     down_block_res_samples, mid_block_res_sample = controlnet(
[rank2]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
[rank2]:     return self._call_impl(*args, **kwargs)
[rank2]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
[rank2]:     return forward_call(*args, **kwargs)
[rank2]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1636, in forward
[rank2]:     else self._run_ddp_forward(*inputs, **kwargs)
[rank2]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1454, in _run_ddp_forward
[rank2]:     return self.module(*inputs, **kwargs)  # type: ignore[index]
[rank2]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
[rank2]:     return self._call_impl(*args, **kwargs)
[rank2]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
[rank2]:     return forward_call(*args, **kwargs)
[rank2]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/utils/operations.py", line 819, in forward
[rank2]:     return model_forward(*args, **kwargs)
[rank2]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/utils/operations.py", line 807, in __call__
[rank2]:     return convert_to_fp32(self.model_forward(*args, **kwargs))
[rank2]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/amp/autocast_mode.py", line 43, in decorate_autocast
[rank2]:     return func(*args, **kwargs)
[rank2]:   File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/models/controlnet_sdv.py", line 501, in forward
[rank2]:     emb = self.time_embedding(t_emb, timestep_cond)
[rank2]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
[rank2]:     return self._call_impl(*args, **kwargs)
[rank2]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
[rank2]:     return forward_call(*args, **kwargs)
[rank2]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/diffusers/models/embeddings.py", line 375, in forward
[rank2]:     sample = sample + self.cond_proj(condition)
[rank2]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
[rank2]:     return self._call_impl(*args, **kwargs)
[rank2]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
[rank2]:     return forward_call(*args, **kwargs)
[rank2]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/linear.py", line 117, in forward
[rank2]:     return F.linear(input, self.weight, self.bias)
[rank2]: RuntimeError: mat1 and mat2 shapes cannot be multiplied (12x16 and 1x320)
Traceback (most recent call last):
  File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/train_svd_controlnet.py", line 1935, in <module>
    main()
  File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/train_svd_controlnet.py", line 1646, in main
    down_block_res_samples, mid_block_res_sample = controlnet(
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1636, in forward
    else self._run_ddp_forward(*inputs, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1454, in _run_ddp_forward
    return self.module(*inputs, **kwargs)  # type: ignore[index]
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/utils/operations.py", line 819, in forward
    return model_forward(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/utils/operations.py", line 807, in __call__
    return convert_to_fp32(self.model_forward(*args, **kwargs))
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/amp/autocast_mode.py", line 43, in decorate_autocast
    return func(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/models/controlnet_sdv.py", line 501, in forward
    emb = self.time_embedding(t_emb, timestep_cond)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/diffusers/models/embeddings.py", line 375, in forward
    sample = sample + self.cond_proj(condition)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
    return forward_call(*args, **kwargs)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/linear.py", line 117, in forward
    return F.linear(input, self.weight, self.bias)
RuntimeError: mat1 and mat2 shapes cannot be multiplied (12x16 and 1x320)
[rank3]: Traceback (most recent call last):
[rank3]:   File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/train_svd_controlnet.py", line 1935, in <module>
[rank3]:     main()
[rank3]:   File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/train_svd_controlnet.py", line 1646, in main
[rank3]:     down_block_res_samples, mid_block_res_sample = controlnet(
[rank3]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
[rank3]:     return self._call_impl(*args, **kwargs)
[rank3]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
[rank3]:     return forward_call(*args, **kwargs)
[rank3]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1636, in forward
[rank3]:     else self._run_ddp_forward(*inputs, **kwargs)
[rank3]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/parallel/distributed.py", line 1454, in _run_ddp_forward
[rank3]:     return self.module(*inputs, **kwargs)  # type: ignore[index]
[rank3]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
[rank3]:     return self._call_impl(*args, **kwargs)
[rank3]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
[rank3]:     return forward_call(*args, **kwargs)
[rank3]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/utils/operations.py", line 819, in forward
[rank3]:     return model_forward(*args, **kwargs)
[rank3]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/utils/operations.py", line 807, in __call__
[rank3]:     return convert_to_fp32(self.model_forward(*args, **kwargs))
[rank3]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/amp/autocast_mode.py", line 43, in decorate_autocast
[rank3]:     return func(*args, **kwargs)
[rank3]:   File "/fs/nexus-scratch/sjxu/svd-temporal-controlnet/models/controlnet_sdv.py", line 501, in forward
[rank3]:     emb = self.time_embedding(t_emb, timestep_cond)
[rank3]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
[rank3]:     return self._call_impl(*args, **kwargs)
[rank3]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
[rank3]:     return forward_call(*args, **kwargs)
[rank3]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/diffusers/models/embeddings.py", line 375, in forward
[rank3]:     sample = sample + self.cond_proj(condition)
[rank3]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1553, in _wrapped_call_impl
[rank3]:     return self._call_impl(*args, **kwargs)
[rank3]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1562, in _call_impl
[rank3]:     return forward_call(*args, **kwargs)
[rank3]:   File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/nn/modules/linear.py", line 117, in forward
[rank3]:     return F.linear(input, self.weight, self.bias)
[rank3]: RuntimeError: mat1 and mat2 shapes cannot be multiplied (12x16 and 1x320)
W1210 22:04:33.841568 139992064263168 torch/distributed/elastic/multiprocessing/api.py:858] Sending process 2198138 closing signal SIGTERM
W1210 22:04:33.841940 139992064263168 torch/distributed/elastic/multiprocessing/api.py:858] Sending process 2198141 closing signal SIGTERM
E1210 22:04:34.156049 139992064263168 torch/distributed/elastic/multiprocessing/api.py:833] failed (exitcode: 1) local_rank: 1 (pid: 2198139) of binary: /fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/bin/python
Traceback (most recent call last):
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/bin/accelerate", line 8, in <module>
    sys.exit(main())
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/commands/accelerate_cli.py", line 48, in main
    args.func(args)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/commands/launch.py", line 1097, in launch_command
    multi_gpu_launcher(args)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/accelerate/commands/launch.py", line 734, in multi_gpu_launcher
    distrib_run.run(args)
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/run.py", line 892, in run
    elastic_launch(
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 133, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/fs/nexus-scratch/sjxu/miniconda3/envs/svd_control/lib/python3.9/site-packages/torch/distributed/launcher/api.py", line 264, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
============================================================
train_svd_controlnet.py FAILED
------------------------------------------------------------
Failures:
[1]:
  time      : 2024-12-10_22:04:33
  host      : gammagpu17.umiacs.umd.edu
  rank      : 2 (local_rank: 2)
  exitcode  : 1 (pid: 2198140)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
------------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2024-12-10_22:04:33
  host      : gammagpu17.umiacs.umd.edu
  rank      : 1 (local_rank: 1)
  exitcode  : 1 (pid: 2198139)
  error_file: <N/A>
  traceback : To enable traceback see: https://pytorch.org/docs/stable/elastic/errors.html
============================================================
srun: error: gammagpu17: task 2: Exited with exit code 1
